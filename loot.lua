local function debug(str)
    --tinsert(GogoLoot_Config.logs, str)
    --print(str)
end

local itemBindings = nil -- populated later
local internalIgnoreList = nil -- populated later

-- used clean up the above tables
local function valToKey(...)
    local newList = {}
    for _, t in pairs({...}) do
        for _, id in pairs(t) do
            newList[id] = true
        end
    end
    return newList
end

GogoLoot = {}

CONFIG_VERSION = 10

function GogoLoot:BuildConfig()
    GogoLoot_Config = {
        ["speedyLoot"] = true,
        ["enabled"] = true,
        ["autoRoll"] = true,
        ["autoConfirm"] = false,
        ["autoRollThreshold"] = 2,
        ["players"] = {},
        ["autoGreenRolls"] = "greed"
    }
    GogoLoot_Config.ignoredItemsSolo = {
        [4500] = true,
        [11732] = true,
        [11733] = true,
        [11734] = true,
        [11736] = true,
        [11737] = true,
        [12662] = true,
        [12800] = true,
        [12811] = true,
        [18332] = true,
        [18333] = true,
        [18334] = true,
        [18335] = true,
        [18401] = true,
        [20520] = true,
    }
    GogoLoot_Config.ignoredItemsMaster = {
        [12662] = true,
        [17966] = true,
        [19872] = true,
        [19902] = true, 
        [19914] = true,
        [21218] = true,
        [21321] = true,
        [21323] = true,
        [21324] = true,
    }

    if string.byte(GetBuildInfo(), 1) == 50 then -- tbc
        GogoLoot_Config.ignoredItemsSolo = {}
        for _, v in pairs({
            29739,
            20520,
            12662,
            29740,
            30183,
            23572
        }) do
            GogoLoot_Config.ignoredItemsSolo[v] = true
            GogoLoot_Config.ignoredItemsMaster[v] = true
        end
    end

    GogoLoot_Config.softres = {}
    GogoLoot_Config.softres.profiles = {}

    GogoLoot_Config._version = CONFIG_VERSION
end

local ItemInfoCache = {}
local ItemIDCache = {}

GogoLoot.validBOPInstances = {
    [249] = true, -- onyxia
    [309] = true, -- ZG
    [409] = true, -- molten core
    [469] = true, -- BWL
    [509] = true, -- AQ20
    [531] = true, -- AQ40
    [533] = true, -- naxx

    [532] = true, -- kara
    [565] = true, -- gruuls
    [544] = true, -- magt
    [548] = true, -- serpentshrine
    [550] = true, -- the eye
    [534] = true, -- hyjal
    [564] = true, -- black temple
    [568] = true, -- za
    [580] = true, -- sunwell
}


GogoLoot.validFilters = {
    ["artifact"] = true,
    ["orange"] = true,
    ["purple"] = true,
    ["blue"] = true,
    ["green"] = true,
    ["white"] = true,
    ["gray"] = true,
    ["all"] = true,
}

local colorToRarity = {
    ["9d9d9d"] = 0,
    ["ffffff"] = 1,
    ["1eff00"] = 2,
    ["0070dd"] = 3,
    ["a335ee"] = 4,
    ["ff8000"] = 5
}

local badErrors = {
    ["You can't loot that item now."] = true,
    ["You don't have permission to loot that corpse."] = true
}

GogoLoot.rarityToText = {
    [0] = "gray",
    [1] = "white",
    [2] = "green",
    [3] = "blue",
    [4] = "purple",
    [5] = "orange",
    [6] = "artifact"
}

GogoLoot.textToName = {
    ["gray"] = "|cff9d9d9dPoor|r",
    ["white"] = "|cffffffffCommon|r",
    ["green"] = "|cff1eff00Uncommon|r",
    ["blue"] = "|cff0070ddRare|r",
    ["purple"] = "|cffa335eeEpic|r",
    ["orange"] = "|cffff8000Legendary|r",
}

GogoLoot.textToLink = {
    ["gray"] = "Poor Items",
    ["white"] = "Common Items",
    ["green"] = "Uncommon Items",
    ["blue"] = "Rare Items",
    ["purple"] = "Epic Items",
    ["orange"] = "Legendary Items",
}

GogoLoot.textToRarity = {}

for k,v in pairs(GogoLoot.rarityToText) do
    GogoLoot.textToRarity[v] = k
end

function GogoLoot:UnitName(key)
    -- if we are on classic era, add realm name
    -- this is safe to run on TBC too as the normal function returns no realm
    local name, realm = UnitName(key)
    if name and realm then
        name = name .. "-" .. realm
    end
    return name
end

function GogoLoot:HideNotification()
    if GogoLoot.notificationFrames then
        for _, frame in pairs(GogoLoot.notificationFrames) do
            frame:Hide()
        end
    end
end

function GogoLoot:CreateNotification()
    local f = CreateFrame("Frame")
    f:SetParent(UIParent)
    f:SetWidth(400)
    f:SetHeight(54)
    f:SetPoint("CENTER", UIParent, "CENTER", -200,0)
    f:Show()
    
    local l = f:CreateFontString(nil, "OVERLAY", "GameFontNormalLarge")
    l:SetAllPoints(f)
    --l:SetJustifyH("LEFT")
    l:Show()


    local f2 = CreateFrame("Frame")
    f2:SetParent(UIParent)
    f2:SetWidth(400)
    f2:SetHeight(54)
    f2:SetPoint("CENTER", UIParent, "CENTER", -200,-20)
    f2:Show()
    
    local l2 = f2:CreateFontString(nil, "OVERLAY", "GameFontNormalLarge")
    l2:SetAllPoints(f2)
    --l2:SetJustifyH("LEFT")
    l2:SetText("|cFF00FF80<GogoLoot Team>|r")
    l2:Show()

    GogoLoot.notificationFrames = {
        l, l2, f, f2
    }
end

function GogoLoot:ShowNotification(text)

    if not GogoLoot.notificationFrames then
        GogoLoot:CreateNotification()
    end

    GogoLoot.notificationFrames[1]:SetText("|cFF00FF80"..text.."|r")

    for _, frame in pairs(GogoLoot.notificationFrames) do
        frame:Show()
    end

end

function GogoLoot:GetGroupMemberNames()
    --[[local ret = {UnitName("Player")}
    for i=1,GetNumSubgroupMembers() do

    end]]

    local fullRaid = {}
    local playerSubgroup = nil
    local playerName = GogoLoot:UnitName("Player")

    for i=1,40 do
        local name, rank, subGroup = GetRaidRosterInfo(i)
        if name then
            --[[if name == playerName then -- only include players in the current subgroup
                playerSubgroup = subGroup
            end]]
            tinsert(fullRaid, {name, rank, subGroup})
        end
    end

    local filtered = {}
    local hasPlayer = false

    for _, entry in pairs(fullRaid) do
        --if entry[3] == playerSubgroup then
            filtered[strlower(entry[1])] = entry[1]--tinsert(filtered, entry)
            hasPlayer = true
        --end
    end

    if not hasPlayer then -- hack: add ourselves if there are no group members
        filtered[strlower(playerName)] = playerName
    end

    return filtered
end

function GogoLoot:areWeMasterLooter()
    local masterLooter = select(2, GetLootMethod()) -- todo: cache this
    return 0 == masterLooter--masterLooter and (masterLooter == 0 or (UnitName("player") == GetRaidRosterInfo(masterLooter)))
end

GogoLoot.canOpenWindow = false

function GogoLoot:showLootFrame(reason, force)
    if InCombatLockdown() then
        debug("Tried to show loot frame while in combat! Blizzard restricted this.")
        return
    end

    if GogoLoot_Config.speedyLoot and (force or GogoLoot.canOpenWindow) then
        debug("Showing loot frame because ".. reason)
        GogoLoot.canOpenWindow = false
        LootFrame:GetScript("OnEvent")(LootFrame, "LOOT_OPENED")
    else
        --print("Didnt open window because")
        --print(GogoLoot.canOpenWindow)
        --print(GogoLoot_Config.speedyLoot)
    end
end

function GogoLoot:VacuumSlotSolo(index)
    debug("Vacuum slot solo " .. tostring(index))
    pcall(LootSlot, index)
end

function GogoLoot:VacuumSlot(index, playerIndex, validPreviouslyHack)
    debug("Vacuum slot " .. tostring(index) .. " " .. tostring(playerIndex) .. " " .. tostring(GogoLoot:areWeMasterLooter()))
    if index and playerIndex and GogoLoot:areWeMasterLooter() then
        debug("We are master looter")
        local lootLink = GetLootSlotLink(index)
        if not lootLink or strlen(lootLink) < 8 then
            debug("Invalid item link")
            return false -- likely gold TODO: CHECK THIS
        end
        if lootLink and not ItemInfoCache[lootLink] then
            ItemIDCache[lootLink] = {string.find(lootLink,"|?c?f?f?(%x*)|?H?([^:]*):?(%d+):?(%d*):?(%d*):?(%d*):?(%d*):?(%d*):?(%-?%d*):?(%-?%d*):?(%d*):?(%d*):?(%-?%d*)|?h?%[?([^%[%]]*)%]?|?h?|?r?")}
            ItemInfoCache[lootLink] = {GetItemInfo(ItemIDCache[lootLink][5])} -- note: GetItemInfo may not be available right away! test this
        end
        local color = ItemIDCache[lootLink][3]
        local rarity = colorToRarity[color] or 6
        local doLoot = rarity < 5

        if doLoot and rarity >= GetLootThreshold() then
            if rarity == 1 then
                doLoot = "quest" ~= strlower(ItemInfoCache[lootLink][6] or "")
            end
        end

        local id = tonumber(ItemIDCache[lootLink][5])
        debug("ShouldLoot " .. tostring(index) .. " = " .. tostring(doLoot) .. " " .. tostring(rarity) .. " " .. tostring(color) .. " " .. lootLink)
        if id and doLoot 
            and (not internalIgnoreList[id])
            and ItemInfoCache[lootLink]
            and ((ItemInfoCache[lootLink][12] ~= 9 -- recipes
                and (not (ItemInfoCache[lootLink][12] == 15 and ItemInfoCache[lootLink][13] == 2)) -- pets
                and (not (ItemInfoCache[lootLink][12] == 15 and ItemInfoCache[lootLink][13] == 5)) -- mounts
            ) or (GogoLoot_Config.professionRollDisable and itemBindings[id] ~= 1))
            and (not GogoLoot_Config.ignoredItemsMaster[id]) -- items from config UI
            and ((not GogoLoot_Config.disableBOP) or (not itemBindings[id]) or itemBindings[id] ~= 1) -- check if item is BOP, and check disable BOP config option
            and ((not itemBindings[id]) or itemBindings[id] ~= 4) -- check if the item is a quest item
            and (itemBindings[id] ~= 1 or GogoLoot.validBOPInstances[select(8, GetInstanceInfo())]) then  -- make sure we are inside an instance that allows loot trading
            

            local softresResult = GogoLoot:HandleSoftresLoot(id, playerIndex, index, GetLootSourceInfo(index)) -- todo: player list

            local targetPlayerName = GogoLoot_Config.players[GogoLoot.rarityToText[rarity]] or strlower(GogoLoot:UnitName("Player"))--GogoLoot_Config.players["all"]

            if softresResult and type(softresResult) == "table" then
                debug("Softres roll taking place")
                if not GogoLoot.softresRemoveRoll[index] then
                    GogoLoot.softresRemoveRoll[index] = {}
                end
                for _, player in pairs(softresResult) do
                    local lower = strlower(player)
                    GogoLoot.softresRemoveRoll[index][playerIndex[lower]] = {lower, id}
                end
                return true -- softres roll taking place
            else
                if softresResult then
                    targetPlayerName = strlower(softresResult) -- loot to this player
                    debug("Softres loot going to " .. targetPlayerName)
                end

                if targetPlayerName == "standardLootWindow" then
                    debug("Standard loot window target")
                    return true -- open loot window
                end

                -- this redirects loot to the "all" player if the specific players are not available
                --local playerID = playerIndex[GogoLoot_Config.players[rarityToText[rarity]]] or playerIndex[GogoLoot_Config.players["all"]]

                if targetPlayerName then
                    debug("Looting to " .. targetPlayerName)
                    local playerID = playerIndex[targetPlayerName]
                    if playerID then
                        validPreviouslyHack[targetPlayerName] = true
                        GiveMasterLoot(index, playerID, true)
                        return false
                    else
                        debug("Player " .. targetPlayerName .. " has no ID!")
                        if validPreviouslyHack[targetPlayerName] then -- we already looted it (hack to fix loot window, refactor this later)
                            return false
                        end
                    end
                else
                    debug("No player to loot! " .. GogoLoot.rarityToText[rarity])
                end
            end
        end
    end
    return true--LootSlot(index)
end


function hookAutoNeed()

    --/dump GetLootRollItemLink(GroupLootFrame1.rollID)

    for i=1,16 do
        local frame = _G["GroupLootFrame" .. tostring(i)]
        if frame then
            debug("Hooking " .. tostring(i))
            frame:HookScript("OnShow", function()
                --frame.GreedButton:GetScript("OnClick")(frame.GreedButton)
                --StaticPopup1Button1:GetScript("OnClick")(StaticPopup1Button1)
            end)
        end
    end
    --/run GroupLootFrame2.NeedButton:GetScript("OnClick")(GroopLootFrame2.NeedButton)
    --/run StaticPopup1Button1:GetScript("OnClick")(StaticPopup1Button1)
end

function GogoLoot:AnnounceNeeds()

    if not IsInGroup() then
        return
    end

    local types = nil

    if GogoLoot_Config.autoGreenRolls == "need" and GogoLoot_Config.autoBlueRolls == "need" and GogoLoot_Config.autoPurpleRolls == "need" then
        types = "Greens, Blues, and Purples"
    else
        if GogoLoot_Config.autoGreenRolls == "need" then
            if not types then
                types = "Greens"
            else
                types = types .. " and Greens"
            end
        end

        if GogoLoot_Config.autoBlueRolls == "need" then
            if not types then
                types = "Blues"
            else
                types = types .. " and Blues"
            end
        end

        if GogoLoot_Config.autoPurpleRolls == "need" then
            if not types then
                types = "Purples"
            else
                types = types .. " and Purples"
            end
        end
    end

    if types then
        SendChatMessage(string.format(GogoLoot.AUTO_NEED_WARNING, types), UnitInRaid("Player") and "RAID" or "PARTY")
    end
end

function GogoLoot:EventHandler(events, evt, arg, message, a, b, c, ...)
    --debug(evt)
    --if ("LOOT_READY" == evt or "LOOT_OPENED" == evt) and not canLoot then
    --    canOpenWindow = true
    --[[if "LOOT_BIND_CONFIRM" == evt and GogoLoot_Config.autoConfirm then
        local id = select(1, GetLootSlotInfo(arg))
        if id and (not internalIgnoreList[id]) and (not GogoLoot_Config.ignoredItemsMaster[id]) and (not GogoLoot_Config.ignoredItemsSolo[id]) then -- items from config UI
            lastItemHidden = true
            ConfirmLootSlot(arg)
        else
            lastItemHidden = false
        end
    else]]

    GogoLoot:TradeEvent(evt, arg, message, a, b, c, ...)

    if ("ADDON_LOADED" == evt) then
        if ("GogoLoot" == arg) then
            events:UnregisterEvent("ADDON_LOADED")
            GogoLoot:Initialize(events)
        end
    elseif "LOOT_READY" == evt then
        lootAPIOpen = true
    elseif ("LOOT_OPENED" == evt) and canLoot then
        debug("LootReady! " .. evt)
        GogoLoot.canOpenWindow = true
        if GetCVarBool("autoLootDefault") ~= IsModifiedClick("AUTOLOOTTOGGLE") then
            if not GogoLoot_Config.enabled then
                GogoLoot:showLootFrame("GogoLoot disabled")
            else
                if not GogoLoot:areWeMasterLooter() then
                    local index = GetNumLootItems()
                    local hasNormalLoot = false
                    for i=1,index do
                        local result = GogoLoot:VacuumSlotSolo(index)
                        hasNormalLoot = hasNormalLoot or couldntLoot
                    end
                    if hasNormalLoot then
                        GogoLoot:showLootFrame("has normal loot solo")
                    end
                else
                    canLoot = false
                    local lootStep = 1
                    local validPreviouslyHack = {}

                    local function incrementLootStep()
                        lootStep = lootStep + 1
                        if lootStep > GetNumLootItems() then
                            lootStep = 1
                        end
                    end

                    local function doLootStep()
                        debug("DoLootStep " .. tostring(lootStep))
                        local index = GetNumLootItems()
                        local playerIndex = {}
                        while index > 0 do -- we run this in its own loop to ensure the player name is available for all slots. Triggering a master loot event can mess with it
                            for i = 1, GetNumGroupMembers() do
                                local playerAtIndex = GetMasterLootCandidate(index, i)
                                if playerAtIndex and not playerIndex[index] then
                                    playerIndex[index] = {}
                                end
                                if playerAtIndex then
                                    playerIndex[index][strlower(playerAtIndex)] = i
                                end
                            end
                            index = index - 1
                        end

                        if playerIndex[lootStep] and GogoLoot:VacuumSlot(lootStep, playerIndex[lootStep], validPreviouslyHack) then -- normal loot, stop ticking
                            --if lootTicker then
                            --    debug("Cancelled loot ticker [1]")
                            --    lootTicker:Cancel()
                            --    lootTicker = nil
                            --end
                            GogoLoot:showLootFrame("has normal loot")
                            incrementLootStep()
                            return true
                        end

                        if lootStep > GetNumLootItems() and lootTicker then
                            debug("Cancelled loot ticker [1]")
                            lootTicker:Cancel()
                            lootTicker = nil
                            return true
                        end

                        incrementLootStep()
                    end
                    if lootTicker then
                        debug("Cancelled loot ticker [2]")
                        lootTicker:Cancel()
                        lootTicker = nil
                    end
                    local hadNormalLoot = false
                    --for i=1,min(5, GetNumLootItems()) do -- do 1 full iteration right away, up to 5 items
                    --    hadNormalLoot = doLootStep() or hadNormalLoot
                    --end
                    if not hadNormalLoot then
                        debug("There is loot, continuing timer...")
                        lootTicker = C_Timer.NewTicker(0.05, doLootStep, 64)
                    end
                end
            end
        else
            GogoLoot:showLootFrame("autoloot disabled")
        end
    elseif "LOOT_CLOSED" == evt then
        lootAPIOpen = false
        canLoot = true
        GogoLoot.canOpenWindow = false
        if lootTicker then
            debug("Cancelled loot ticker [3]")
            lootTicker:Cancel()
            lootTicker = nil
        end
    elseif "START_LOOT_ROLL" == evt then
        local rollid = tonumber(arg)
        if rollid and GogoLoot_Config.autoRoll then
            local itemLink = GetLootRollItemLink(rollid)
            if itemLink then
                debug(itemLink)
                local data = {string.find(itemLink,"|?c?f?f?(%x*)|?H?([^:]*):?(%d+):?(%d*):?(%d*):?(%d*):?(%d*):?(%d*):?(%-?%d*):?(%-?%d*):?(%d*):?(%d*):?(%-?%d*)|?h?%[?([^%[%]]*)%]?|?h?|?r?")}
                debug(data[5])
                local itemID = tonumber(data[5])
                if itemID then
                    if not itemLink or strlen(itemLink) < 8 then
                        debug("Invalid item link")
                        return -- likely gold TODO: CHECK THIS
                    end
                    if itemLink and not ItemInfoCache[itemLink] then
                        ItemIDCache[itemLink] = {string.find(itemLink,"|?c?f?f?(%x*)|?H?([^:]*):?(%d+):?(%d*):?(%d*):?(%d*):?(%d*):?(%d*):?(%-?%d*):?(%-?%d*):?(%d*):?(%d*):?(%-?%d*)|?h?%[?([^%[%]]*)%]?|?h?|?r?")}
                        ItemInfoCache[itemLink] = {GetItemInfo(itemID)} -- note: GetItemInfo may not be available right away! test this
                    end
                    if (not itemBindings[itemID]) or itemBindings[itemID] ~= 1 then -- not bind on pickup
                        if ItemInfoCache[itemLink] and (not GogoLoot_Config.ignoredItemsSolo[itemID]) and (not internalIgnoreList[itemID]) and ((ItemInfoCache[itemLink][12] ~= 9 -- recipes
                            and (not (ItemInfoCache[itemLink][12] == 15 and ItemInfoCache[itemLink][13] == 2)) -- pets
                            and (not (ItemInfoCache[itemLink][12] == 15 and ItemInfoCache[itemLink][13] == 5)) -- mounts
                        ) or (GogoLoot_Config.professionRollDisable and itemBindings[id] ~= 1)) then
                            -- we should auto need or greed this
                            
                            -- find desired roll behavior for item type
                            local rarity = colorToRarity[data[3]]
                            local action = nil

                            if rarity == 2 then -- green
                                if GogoLoot_Config.autoGreenRolls then
                                    if GogoLoot_Config.autoGreenRolls == "need" then
                                        action = 1
                                    elseif GogoLoot_Config.autoGreenRolls == "greed" then
                                        action = 2
                                    end
                                end
                            elseif rarity == 3 then -- blue
                                if GogoLoot_Config.autoBlueRolls then
                                    if GogoLoot_Config.autoBlueRolls == "need" then
                                        action = 1
                                    elseif GogoLoot_Config.autoBlueRolls == "greed" then
                                        action = 2
                                    end
                                end
                            elseif rarity == 4 then -- epic
                                if GogoLoot_Config.autoPurpleRolls then
                                    if GogoLoot_Config.autoPurpleRolls == "need" then
                                        action = 1
                                    elseif GogoLoot_Config.autoPurpleRolls == "greed" then
                                        action = 2
                                    end
                                end
                            end

                            if action then
                                debug("Rolling on loot: " .. tostring(rollid) .. " thresh: " .. tostring(action))
                                RollOnLoot(rollid, action)
                            end
                        end
                    end
                end
            end
        end
        --print(arg)
        --print(message)
    elseif "LOOT_BIND_CONFIRM" == evt then
        GogoLoot:showLootFrame("bind confirm")
    elseif "UI_ERROR_MESSAGE" == evt and message and (message == ERR_ITEM_MAX_COUNT or message == ERR_INV_FULL or string.match(strlower(message), "inventory") or string.match(strlower(message), "loot")) and not badErrors[message] then
        debug(message)
        if lootTicker then
            debug("Cancelled loot ticker [4]")
            lootTicker:Cancel()
            lootTicker = nil
        end
        GogoLoot:showLootFrame("inventory error " .. message)
    elseif "BAG_UPDATE" == evt and GogoLoot_Config.enableAutoGray and WOW_PROJECT_ID ~= WOW_PROJECT_BURNING_CRUSADE_CLASSIC then

        -- auto gray
        --debug("BagUpdate!")
        if arg and tonumber(arg) then
            local slt = GetContainerNumSlots(arg)
            for i=1,slt do
                local dat = {GetContainerItemInfo(arg, i)}
                if dat[4] == 0 then
                    PickupContainerItem(arg, i)
                    DeleteCursorItem()
                end
            end
        end

        --print(message)
        --print(a)
        --print(b)
        --print(c)
        --print(arg)
    elseif "GROUP_ROSTER_UPDATE" == evt then
        local inGroup = IsInGroup()
        if inGroup ~= GogoLoot.isInGroup then
            GogoLoot.isInGroup = inGroup
            if inGroup then -- we have just joined a group
                if GetLootMethod() == "group" then
                    GogoLoot:AnnounceNeeds()--SendChatMessage(string.format(GogoLoot.AUTO_ROLL_ENABLED, 1 == GogoLoot_Config.autoRollThreshold and "Need" or "Greed"), UnitInRaid("Player") and "RAID" or "PARTY")
                end
            else -- we left, clear group-specific settings
                GogoLoot_Config.players = {}
                GogoLoot_Config.softres.profiles.current = nil
                GogoLoot_Config.softres.profiles._current_data = nil
            end
        end
    elseif "PARTY_LOOT_METHOD_CHANGED" == evt and GogoLoot:areWeMasterLooter() and GetLootMethod() == "master" then
        GogoLoot:BuildUI()
    elseif "LOOT_SLOT_CLEARED" == evt then
        --print("LSC: " .. tostring(GetLootSlotInfo(tonumber(arg))))
        GogoLoot:HandleSoftresLooted(arg)
    elseif "PARTY_LOOT_METHOD_CHANGED" == evt and GetLootMethod() == "group" then
        GogoLoot:AnnounceNeeds()
    --    SendChatMessage(string.format(GogoLoot.AUTO_ROLL_ENABLED, 1 == GogoLoot_Config.autoRollThreshold and "Need" or "Greed"), UnitInRaid("Player") and "RAID" or "PARTY")
    elseif "MODIFIER_STATE_CHANGED" == evt and not canLoot then
        if GetCVarBool("autoLootDefault") == IsModifiedClick("AUTOLOOTTOGGLE") then
            GogoLoot:showLootFrame("modifier state changed")
        end
    elseif "PLAYER_REGEN_DISABLED" == evt then
        if GogoLoot_Config.speedyLoot then
            LootFrame:RegisterEvent('LOOT_OPENED')
        end
    elseif "PLAYER_REGEN_ENABLED" == evt then
        if GogoLoot_Config.speedyLoot then
            LootFrame:UnregisterEvent('LOOT_OPENED')
        end
    elseif "PLAYER_ENTERING_WORLD" == evt then -- init config default
        if (not GogoLoot_Config) or (not GogoLoot_Config._version) or GogoLoot_Config._version < CONFIG_VERSION then
            GogoLoot:BuildConfig()
        end
        GogoLoot.isInGroup = IsInGroup() -- used to detect when we joined a group

        if GogoLoot.isInGroup then
            C_Timer.After(0.5, function()
                if GetLootMethod() == "group" and select(5, GetInstanceInfo()) ~= 0 then
                    GogoLoot:AnnounceNeeds() --SendChatMessage(string.format(GogoLoot.AUTO_ROLL_ENABLED, 1 == GogoLoot_Config.autoRollThreshold and "Need" or "Greed"), UnitInRaid("Player") and "RAID" or "PARTY")
                end
            end)
        end

        if select(5, GetInstanceInfo()) == 0 then
            GogoLoot._inInstance = false
        elseif GogoLoot._inInstance == false then
            GogoLoot._inInstance = true
        end
        for id in pairs(GogoLoot_Config.ignoredItemsSolo) do
            GetItemInfo(id)
        end
        for id in pairs(GogoLoot_Config.ignoredItemsMaster) do
            GetItemInfo(id)
        end

        if GogoLoot_Config.speedyLoot and not InCombatLockdown() then
            LootFrame:UnregisterEvent('LOOT_OPENED')
        end
        local creatorText = "\124TInterface\\TargetingFrame\\UI-RaidTargetingIcon_4.png:0\124t GogoLoot : Team Member"
        GameTooltip:HookScript("OnTooltipSetUnit", function(self)

            local name, unit = self:GetUnit()
            if name and unit and GogoLoot:IsCreator(name, UnitFactionGroup(unit)) then
                --if (not UnitInRaid(unit)) and (not UnitInParty(unit)) then
                --    GogoLoot:ShowNotification(name)
                --end

                -- ensure its not already added (blizzard bug)
                local alreaydAdded = false
                for i = 1, GameTooltip:NumLines() do
                    if _G["GameTooltipTextLeft" .. tostring(i)]:GetText() == creatorText then
                        alreaydAdded = true
                        break
                    end
                end
                if not alreaydAdded then
                    GameTooltip:AddLine(creatorText)
                end
            else
                --GogoLoot:HideNotification()
            end
        end)

        if not GogoLoot_Config.logs then
            GogoLoot_Config.logs = {}
        end

        debug("Started up!")

        if not GogoLoot._has_done_conflict_check then
            GogoLoot._has_done_conflict_check = true
            for _, addon in pairs(GogoLoot.conflicts) do
                if IsAddOnLoaded(addon) then
                    local conflict = addon
                    C_Timer.After(4, function()
                        print(GogoLoot.ADDON_CONFLICT) -- send shortly after login, so its not drown out by other addon messages
                        print("The conflicting AdddOn: " .. conflict)
                    end)
                    break
                end
            end
        end

        if not GogoLoot_Config._has_notified_api_change then
            GogoLoot_Config._has_notified_api_change = true
            print(GogoLoot.API_WARNING)
        end
        
        GameTooltip:HookScript("OnHide", function()
            GogoLoot:HideNotification()
        end)
    elseif "PLAYER_LOGIN" == evt then
        --[[for _, addon in pairs(GogoLoot.conflicts) do
            print(addon)
            if IsAddOnLoaded(addon) then
                print("LD")
                C_Timer.After(4, function()
                    print(GogoLoot.ADDON_CONFLICT) -- send shortly after login, so its not drown out by other addon messages
                end)
                break
            end
        end]]
    end
end

local events = CreateFrame('Frame')
events:RegisterEvent("ADDON_LOADED")
events:SetScript("OnEvent", function(event, ...) GogoLoot.EventHandler(self, event, ...) end)

function GogoLoot:Initialize(events)
    local function capitalize(str)
        return (str:gsub("^%l", string.upper))
    end
    local function printInvalid()
        print("|cFFAAFFAA[GogoLoot]|r Invalid arguments! Try |cFF00FF00/lv <player>|r or |cFF00FF00/lv <quality> <player>|r or |cFF00FF00/lv status|r")
    end
    SlashCmdList["LV"] = function(args)
        local parsed = {}
        for s in args:gmatch("%S+") do tinsert(parsed, s) end

        local filter, player = unpack(parsed)

        if not filter and not player then
            GogoLoot:BuildUI()
        elseif filter == "status" and not player then
            print("|cFFAAFFAA[GogoLoot]|r The current configuration:")
            for k,v in pairs(GogoLoot_Config.players) do
                print("    |cFF00FF00"..k.."|r -> |cFF00FF00" .. v .. "|r")
            end
        elseif player and filter and GogoLoot.validFilters[filter] and false then
            if player == GogoLoot_Config.players[filter] then
                GogoLoot_Config.players[filter] = nil
                print("|cFFAAFFAA[GogoLoot]|r "..capitalize(filter).." loot is no longer being redirected.")
            else
                GogoLoot_Config.players[filter] = player
                print("|cFFAAFFAA[GogoLoot]|r "..capitalize(filter).." loot is now redirected to \"|cFF00FF00" .. player .. "|r\"")
            end
        elseif filter and not player and false then
            if filter == GogoLoot_Config.players["all"] then
                GogoLoot_Config.players["all"] = nil
                print("|cFFAAFFAA[GogoLoot]|r Loot is no longer being redirected.")
            else
                GogoLoot_Config.players["all"] = filter
                print("|cFFAAFFAA[GogoLoot]|r Loot is now redirected to \"|cFF00FF00" .. filter .. "|r\"")
            end
        else    
            printInvalid()
        end

    end

    SlashCmdList["TG"] = function(args)
        local payout = tonumber(args)
        if payout and GogoLoot:UnitName("target") then
            --print("Payout set to " .. args .. " gold")
            _PAYOUT = math.floor(payout * 10000) -- gold to copper
            InitiateTrade("target")
            if _TradeTimer then 
                _TradeTimer:Cancel() 
            end 
            _TradeTimer=nil 
            _TradeTimer=C_Timer.NewTicker(0.1, function() 
                if TradeFrame:IsShown() then
                    MoneyInputFrame_SetCopper(TradePlayerInputMoneyFrame,_PAYOUT) 
                    _TradeTimer:Cancel() 
                    _TradeTimer=nil 
                end 
            end)
        else
            print("Please specify payout value")
        end
    end

    SLASH_LV1 = "/gl"
    SLASH_LV2 = "/gogoloot"

    SLASH_TG1 = "/tg"

    local canLoot = true
    local lootAPIOpen = false
    local lootTicker = nil

    hooksecurefunc("GiveMasterLoot", function(index, player, isGogoLoot)
        if not isGogoLoot then
            --print("Manual masterloot: " .. tostring(index) .. " " .. tostring(player))
            if GogoLoot.softresRemoveRoll[index] and GogoLoot.softresRemoveRoll[index][player] then
                local winningPlayer, item = unpack(GogoLoot.softresRemoveRoll[index][player])
                
                debug("Player " .. winningPlayer .. " won softres roll")
                GogoLoot:HandleSoftresRollWin(winningPlayer, item)
            end
        end
    end)

    UIParent:UnregisterEvent("LOOT_BIND_CONFIRM") -- ensure our event hook runs before UIParent
    events:RegisterEvent("LOOT_BIND_CONFIRM")
    UIParent:RegisterEvent("LOOT_BIND_CONFIRM")
    events:RegisterEvent("LOOT_READY")
    events:RegisterEvent("LOOT_OPENED")
    events:RegisterEvent("LOOT_CLOSED")
    events:RegisterEvent("LOOT_SLOT_CLEARED")
    events:RegisterEvent("MODIFIER_STATE_CHANGED")
    events:RegisterEvent("UI_ERROR_MESSAGE")
    events:RegisterEvent("BAG_UPDATE")
    events:RegisterEvent("PLAYER_ENTERING_WORLD")
    events:RegisterEvent("PARTY_LOOT_METHOD_CHANGED")
    events:RegisterEvent("GROUP_ROSTER_UPDATE")
    events:RegisterEvent("START_LOOT_ROLL")
    events:RegisterEvent("PLAYER_LOGIN")

    events:RegisterEvent("PLAYER_REGEN_DISABLED")
    events:RegisterEvent("PLAYER_REGEN_ENABLED")
    local lastItemHidden = false

    --[[ -- auto confirm
    hooksecurefunc("StaticPopup_Show", function(popup)
        if not ((popup ~= "CONFIRM_LOOT_ROLL" and popup ~= "LOOT_BIND") or (not lastItemHidden) or (not GogoLoot_Config.autoConfirm)) then
            StaticPopup1:Hide()
            StaticPopup2:Hide()
            StaticPopup3:Hide()
            StaticPopup4:Hide()
        end
    end)]]

    LootFrame.selectedQuality = GetLootThreshold()

    GogoLoot:HookTrades(events)
end

internalIgnoreList = valToKey(
{ -- manual blacklist
    12947, --Alex's Ring of Audacity
    13262, --Ashbringer
    17182, --Sulfuras, Hand of Ragnaros
    17204, --Eye of Sulfuras
    17771, --Elementium Bar
    17782, --Talisman of Binding Shard
    18563, --Bindings of the Windseeker
    18564, --Bindings of the Windseeker
    18565, --Vessel of Rebirth
    18566, --Essence of the Firelord
    18582, --The Twin Blades of Azzinoth
    18583, --Warglaive of Azzinoth (Right)
    18584, --Warglaive of Azzinoth (Left)
    19016, --Vessel of Rebirth
    19018, --Dormant Wind Kissed Blade
    19019, --Thunderfury, Blessed Blade of the Windseeker
    21176, --Black Qiraji Resonating Crystal
    22589, --Atiesh, Greatstaff of the Guardian
    22630, --Atiesh, Greatstaff of the Guardian
    22631, --Atiesh, Greatstaff of the Guardian
    22632, --Atiesh, Greatstaff of the Guardian
    22726, --Splinter of Atiesh
    22727, --Frame of Atiesh
    22736, --Andonisus, Reaper of Souls
    22737, --Atiesh, Greatstaff of the Guardian
    23051, --Glaive of the Defender
})

itemBindings = {
    [60]=1,
    [61]=1,
    [79]=1,
    [80]=1,
    [182]=4,
    [710]=1,
    [719]=1,
    [725]=4,
    [735]=4,
    [737]=1,
    [738]=4,
    [739]=4,
    [740]=4,
    [742]=4,
    [743]=4,
    [744]=1,
    [745]=4,
    [748]=4,
    [750]=4,
    [752]=4,
    [772]=4,
    [773]=4,
    [780]=4,
    [782]=4,
    [829]=4,
    [835]=1,
    [841]=4,
    [859]=1,
    [860]=1,
    [872]=1,
    [884]=4,
    [888]=1,
    [889]=4,
    [895]=4,
    [896]=4,
    [910]=4,
    [915]=4,
    [916]=4,
    [918]=1,
    [921]=4,
    [938]=4,
    [939]=4,
    [957]=4,
    [962]=4,
    [981]=4,
    [983]=1,
    [1006]=4,
    [1008]=1,
    [1009]=1,
    [1010]=1,
    [1011]=1,
    [1013]=4,
    [1019]=4,
    [1075]=4,
    [1083]=4,
    [1116]=1,
    [1127]=1,
    [1129]=4,
    [1130]=4,
    [1131]=1,
    [1132]=1,
    [1154]=1,
    [1155]=1,
    [1156]=1,
    [1158]=1,
    [1159]=1,
    [1161]=1,
    [1171]=1,
    [1172]=1,
    [1173]=1,
    [1182]=1,
    [1183]=1,
    [1187]=1,
    [1191]=1,
    [1208]=4,
    [1221]=4,
    [1252]=4,
    [1254]=1,
    [1256]=4,
    [1257]=4,
    [1260]=4,
    [1261]=4,
    [1262]=1,
    [1264]=1,
    [1270]=1,
    [1273]=1,
    [1275]=1,
    [1276]=1,
    [1282]=1,
    [1283]=4,
    [1284]=4,
    [1292]=1,
    [1293]=4,
    [1294]=4,
    [1302]=1,
    [1303]=1,
    [1304]=1,
    [1306]=1,
    [1307]=1,
    [1309]=4,
    [1310]=1,
    [1317]=1,
    [1319]=1,
    [1322]=1,
    [1325]=4,
    [1327]=4,
    [1349]=4,
    [1353]=4,
    [1358]=4,
    [1359]=1,
    [1360]=1,
    [1361]=4,
    [1362]=4,
    [1381]=4,
    [1382]=1,
    [1383]=1,
    [1386]=1,
    [1404]=1,
    [1407]=4,
    [1408]=4,
    [1409]=4,
    [1410]=4,
    [1434]=1,
    [1436]=1,
    [1449]=1,
    [1451]=4,
    [1453]=4,
    [1467]=4,
    [1479]=1,
    [1480]=1,
    [1490]=1,
    [1518]=4,
    [1519]=4,
    [1524]=4,
    [1528]=4,
    [1532]=4,
    [1537]=1,
    [1547]=1,
    [1557]=1,
    [1561]=1,
    [1566]=1,
    [1596]=4,
    [1598]=4,
    [1637]=4,
    [1656]=4,
    [1729]=1,
    [1832]=1,
    [1875]=4,
    [1893]=1,
    [1894]=4,
    [1922]=4,
    [1923]=4,
    [1931]=4,
    [1937]=1,
    [1939]=4,
    [1941]=4,
    [1942]=4,
    [1946]=4,
    [1956]=4,
    [1962]=1,
    [1968]=4,
    [1970]=1,
    [1971]=4,
    [1972]=1,
    [1987]=4,
    [2000]=1,
    [2004]=4,
    [2005]=4,
    [2006]=4,
    [2007]=4,
    [2008]=4,
    [2032]=1,
    [2033]=1,
    [2036]=1,
    [2037]=1,
    [2041]=1,
    [2042]=1,
    [2043]=1,
    [2044]=1,
    [2047]=1,
    [2048]=1,
    [2074]=1,
    [2082]=1,
    [2089]=1,
    [2113]=4,
    [2137]=1,
    [2154]=1,
    [2161]=4,
    [2162]=4,
    [2165]=1,
    [2172]=1,
    [2173]=1,
    [2186]=1,
    [2187]=4,
    [2188]=4,
    [2195]=1,
    [2218]=1,
    [2223]=4,
    [2224]=1,
    [2225]=1,
    [2230]=1,
    [2231]=1,
    [2237]=1,
    [2238]=1,
    [2239]=4,
    [2240]=1,
    [2249]=1,
    [2250]=4,
    [2252]=4,
    [2263]=1,
    [2326]=1,
    [2378]=4,
    [2382]=4,
    [2411]=1,
    [2414]=1,
    [2466]=4,
    [2476]=4,
    [2477]=4,
    [2536]=4,
    [2545]=1,
    [2547]=1,
    [2548]=4,
    [2560]=4,
    [2561]=4,
    [2562]=1,
    [2563]=4,
    [2571]=1,
    [2586]=1,
    [2606]=4,
    [2607]=4,
    [2609]=4,
    [2610]=4,
    [2611]=4,
    [2619]=4,
    [2625]=4,
    [2628]=4,
    [2629]=4,
    [2634]=4,
    [2636]=4,
    [2637]=4,
    [2639]=4,
    [2640]=4,
    [2658]=4,
    [2659]=4,
    [2660]=4,
    [2661]=4,
    [2662]=1,
    [2663]=1,
    [2666]=4,
    [2667]=4,
    [2671]=4,
    [2676]=4,
    [2690]=1,
    [2691]=1,
    [2694]=1,
    [2696]=4,
    [2702]=4,
    [2712]=4,
    [2713]=4,
    [2719]=4,
    [2720]=4,
    [2722]=4,
    [2724]=4,
    [2756]=4,
    [2757]=4,
    [2758]=4,
    [2759]=4,
    [2760]=4,
    [2779]=4,
    [2784]=4,
    [2788]=4,
    [2794]=1,
    [2795]=4,
    [2797]=4,
    [2805]=1,
    [2806]=4,
    [2816]=1,
    [2817]=1,
    [2818]=1,
    [2820]=1,
    [2828]=4,
    [2829]=4,
    [2830]=4,
    [2831]=4,
    [2832]=4,
    [2833]=4,
    [2834]=4,
    [2837]=4,
    [2839]=1,
    [2843]=4,
    [2846]=4,
    [2855]=4,
    [2856]=4,
    [2858]=4,
    [2859]=4,
    [2872]=4,
    [2874]=1,
    [2875]=4,
    [2876]=4,
    [2885]=4,
    [2900]=1,
    [2902]=1,
    [2903]=1,
    [2904]=1,
    [2905]=1,
    [2906]=1,
    [2907]=1,
    [2908]=1,
    [2909]=4,
    [2910]=1,
    [2913]=1,
    [2916]=1,
    [2917]=1,
    [2925]=4,
    [2926]=4,
    [2933]=1,
    [2939]=4,
    [2941]=1,
    [2942]=1,
    [2943]=1,
    [2944]=1,
    [2949]=1,
    [2950]=1,
    [2953]=1,
    [2954]=1,
    [2956]=4,
    [2998]=4,
    [2999]=4,
    [3014]=4,
    [3016]=4,
    [3017]=4,
    [3035]=4,
    [3070]=1,
    [3071]=1,
    [3078]=1,
    [3079]=1,
    [3080]=4,
    [3081]=4,
    [3082]=4,
    [3083]=4,
    [3084]=4,
    [3085]=4,
    [3086]=4,
    [3103]=1,
    [3110]=4,
    [3117]=4,
    [3151]=1,
    [3152]=1,
    [3153]=1,
    [3154]=1,
    [3155]=4,
    [3156]=4,
    [3157]=4,
    [3158]=1,
    [3160]=1,
    [3161]=1,
    [3162]=4,
    [3163]=4,
    [3165]=4,
    [3166]=1,
    [3183]=4,
    [3191]=1,
    [3209]=1,
    [3216]=1,
    [3217]=1,
    [3218]=4,
    [3228]=1,
    [3230]=1,
    [3234]=4,
    [3235]=1,
    [3236]=4,
    [3237]=4,
    [3238]=4,
    [3248]=4,
    [3250]=4,
    [3251]=1,
    [3252]=4,
    [3253]=4,
    [3254]=4,
    [3255]=4,
    [3256]=4,
    [3257]=4,
    [3258]=4,
    [3264]=4,
    [3265]=4,
    [3266]=4,
    [3267]=1,
    [3268]=1,
    [3269]=1,
    [3270]=1,
    [3272]=1,
    [3273]=1,
    [3274]=1,
    [3275]=1,
    [3276]=1,
    [3277]=1,
    [3297]=4,
    [3317]=1,
    [3318]=4,
    [3324]=1,
    [3337]=4,
    [3339]=4,
    [3342]=1,
    [3343]=1,
    [3344]=1,
    [3347]=4,
    [3348]=4,
    [3349]=4,
    [3352]=1,
    [3353]=4,
    [3354]=4,
    [3360]=1,
    [3397]=4,
    [3400]=1,
    [3405]=4,
    [3406]=4,
    [3407]=4,
    [3408]=4,
    [3409]=4,
    [3411]=4,
    [3412]=4,
    [3418]=4,
    [3425]=4,
    [3431]=1,
    [3434]=1,
    [3435]=1,
    [3437]=1,
    [3439]=1,
    [3440]=1,
    [3442]=1,
    [3443]=1,
    [3444]=1,
    [3445]=1,
    [3446]=1,
    [3447]=1,
    [3449]=1,
    [3450]=1,
    [3451]=1,
    [3452]=1,
    [3453]=1,
    [3454]=1,
    [3455]=1,
    [3456]=1,
    [3457]=1,
    [3458]=1,
    [3460]=4,
    [3461]=1,
    [3462]=1,
    [3463]=1,
    [3467]=4,
    [3468]=4,
    [3476]=4,
    [3477]=4,
    [3493]=1,
    [3495]=4,
    [3496]=4,
    [3497]=4,
    [3498]=4,
    [3499]=4,
    [3502]=4,
    [3505]=4,
    [3506]=4,
    [3508]=4,
    [3509]=4,
    [3510]=4,
    [3511]=1,
    [3514]=4,
    [3515]=4,
    [3516]=4,
    [3517]=4,
    [3518]=4,
    [3520]=4,
    [3521]=4,
    [3550]=4,
    [3551]=4,
    [3552]=4,
    [3553]=4,
    [3554]=4,
    [3555]=1,
    [3556]=1,
    [3558]=1,
    [3559]=1,
    [3560]=1,
    [3561]=1,
    [3562]=1,
    [3564]=4,
    [3565]=1,
    [3566]=1,
    [3567]=1,
    [3570]=1,
    [3572]=1,
    [3573]=1,
    [3574]=1,
    [3578]=1,
    [3581]=1,
    [3582]=1,
    [3583]=1,
    [3585]=1,
    [3586]=1,
    [3601]=4,
    [3604]=1,
    [3605]=1,
    [3613]=4,
    [3614]=4,
    [3615]=4,
    [3616]=4,
    [3617]=4,
    [3618]=4,
    [3619]=4,
    [3621]=4,
    [3622]=4,
    [3623]=4,
    [3625]=4,
    [3626]=4,
    [3627]=4,
    [3628]=4,
    [3629]=4,
    [3630]=4,
    [3631]=4,
    [3632]=4,
    [3633]=4,
    [3634]=4,
    [3635]=4,
    [3636]=4,
    [3637]=4,
    [3638]=4,
    [3639]=4,
    [3640]=4,
    [3657]=4,
    [3658]=4,
    [3659]=4,
    [3660]=4,
    [3668]=1,
    [3672]=4,
    [3684]=4,
    [3688]=4,
    [3689]=4,
    [3690]=4,
    [3691]=4,
    [3692]=4,
    [3693]=4,
    [3701]=4,
    [3704]=4,
    [3706]=1,
    [3708]=4,
    [3710]=4,
    [3714]=4,
    [3715]=4,
    [3716]=4,
    [3717]=4,
    [3718]=4,
    [3720]=4,
    [3721]=4,
    [3732]=1,
    [3733]=1,
    [3739]=1,
    [3741]=1,
    [3742]=1,
    [3743]=1,
    [3747]=1,
    [3748]=1,
    [3749]=1,
    [3750]=1,
    [3751]=1,
    [3752]=1,
    [3753]=1,
    [3754]=1,
    [3755]=1,
    [3758]=1,
    [3759]=1,
    [3760]=1,
    [3761]=1,
    [3763]=1,
    [3764]=1,
    [3765]=1,
    [3822]=1,
    [3833]=1,
    [3834]=1,
    [3838]=4,
    [3839]=4,
    [3862]=4,
    [3863]=4,
    [3876]=4,
    [3877]=4,
    [3879]=4,
    [3880]=4,
    [3897]=4,
    [3898]=1,
    [3900]=4,
    [3901]=4,
    [3904]=4,
    [3905]=4,
    [3906]=4,
    [3907]=4,
    [3908]=4,
    [3909]=4,
    [3910]=4,
    [3911]=4,
    [3912]=4,
    [3913]=4,
    [3915]=4,
    [3916]=4,
    [3917]=4,
    [3918]=4,
    [3919]=4,
    [3920]=4,
    [3921]=4,
    [3922]=4,
    [3923]=4,
    [3924]=4,
    [3925]=4,
    [3926]=4,
    [3930]=4,
    [3932]=4,
    [3935]=4,
    [3960]=4,
    [3985]=1,
    [4016]=4,
    [4027]=4,
    [4028]=4,
    [4029]=4,
    [4034]=4,
    [4053]=4,
    [4085]=4,
    [4086]=1,
    [4094]=4,
    [4103]=4,
    [4104]=4,
    [4105]=4,
    [4106]=4,
    [4107]=1,
    [4108]=1,
    [4109]=1,
    [4110]=1,
    [4111]=1,
    [4112]=1,
    [4113]=1,
    [4114]=1,
    [4115]=1,
    [4116]=1,
    [4117]=1,
    [4118]=1,
    [4119]=1,
    [4120]=1,
    [4121]=1,
    [4122]=1,
    [4123]=1,
    [4124]=1,
    [4125]=1,
    [4126]=1,
    [4127]=1,
    [4128]=1,
    [4129]=1,
    [4130]=1,
    [4131]=1,
    [4132]=1,
    [4133]=1,
    [4134]=1,
    [4135]=1,
    [4136]=1,
    [4137]=1,
    [4138]=1,
    [4139]=1,
    [4140]=1,
    [4197]=1,
    [4213]=1,
    [4429]=4,
    [4430]=1,
    [4432]=4,
    [4433]=1,
    [4435]=4,
    [4440]=4,
    [4441]=4,
    [4443]=1,
    [4450]=4,
    [4453]=4,
    [4458]=4,
    [4466]=4,
    [4467]=4,
    [4468]=4,
    [4469]=4,
    [4472]=4,
    [4473]=4,
    [4482]=4,
    [4483]=4,
    [4484]=4,
    [4485]=4,
    [4487]=4,
    [4488]=4,
    [4489]=4,
    [4490]=4,
    [4491]=4,
    [4492]=4,
    [4493]=4,
    [4494]=4,
    [4495]=4,
    [4502]=4,
    [4503]=4,
    [4504]=1,
    [4505]=1,
    [4506]=4,
    [4507]=1,
    [4508]=1,
    [4509]=1,
    [4510]=4,
    [4511]=1,
    [4512]=4,
    [4513]=4,
    [4514]=4,
    [4515]=4,
    [4516]=4,
    [4517]=4,
    [4518]=4,
    [4519]=4,
    [4520]=4,
    [4521]=4,
    [4522]=4,
    [4525]=4,
    [4526]=4,
    [4527]=4,
    [4528]=4,
    [4529]=4,
    [4530]=4,
    [4531]=4,
    [4532]=4,
    [4533]=4,
    [4534]=1,
    [4535]=1,
    [4543]=1,
    [4545]=1,
    [4546]=1,
    [4547]=1,
    [4548]=1,
    [4549]=1,
    [4550]=1,
    [4551]=4,
    [4598]=1,
    [4610]=4,
    [4612]=4,
    [4613]=1,
    [4614]=1,
    [4615]=4,
    [4616]=4,
    [4621]=4,
    [4622]=4,
    [4626]=4,
    [4627]=4,
    [4628]=4,
    [4629]=4,
    [4630]=4,
    [4631]=4,
    [4635]=4,
    [4640]=4,
    [4641]=4,
    [4643]=1,
    [4644]=4,
    [4645]=4,
    [4646]=4,
    [4647]=4,
    [4648]=4,
    [4649]=4,
    [4650]=4,
    [4652]=1,
    [4653]=1,
    [4654]=4,
    [4702]=4,
    [4703]=4,
    [4739]=4,
    [4740]=4,
    [4741]=1,
    [4742]=4,
    [4743]=1,
    [4744]=1,
    [4745]=1,
    [4746]=1,
    [4751]=4,
    [4752]=4,
    [4753]=4,
    [4755]=4,
    [4758]=4,
    [4759]=4,
    [4769]=4,
    [4770]=4,
    [4783]=4,
    [4801]=4,
    [4802]=4,
    [4803]=4,
    [4804]=4,
    [4805]=4,
    [4806]=4,
    [4807]=4,
    [4808]=4,
    [4809]=4,
    [4819]=4,
    [4823]=4,
    [4834]=4,
    [4840]=1,
    [4841]=4,
    [4843]=1,
    [4844]=1,
    [4845]=1,
    [4846]=4,
    [4847]=4,
    [4848]=4,
    [4849]=4,
    [4850]=4,
    [4851]=1,
    [4854]=1,
    [4859]=4,
    [4862]=4,
    [4863]=4,
    [4864]=4,
    [4866]=4,
    [4869]=4,
    [4870]=4,
    [4871]=4,
    [4881]=1,
    [4883]=4,
    [4886]=4,
    [4887]=4,
    [4888]=4,
    [4890]=4,
    [4891]=4,
    [4892]=4,
    [4893]=4,
    [4894]=4,
    [4895]=4,
    [4896]=4,
    [4897]=4,
    [4898]=4,
    [4903]=1,
    [4904]=4,
    [4905]=4,
    [4906]=1,
    [4907]=1,
    [4908]=1,
    [4909]=1,
    [4910]=1,
    [4911]=1,
    [4913]=1,
    [4914]=1,
    [4915]=1,
    [4916]=1,
    [4917]=1,
    [4918]=4,
    [4919]=1,
    [4920]=1,
    [4921]=1,
    [4922]=1,
    [4923]=1,
    [4924]=1,
    [4925]=1,
    [4926]=1,
    [4928]=1,
    [4929]=1,
    [4931]=1,
    [4932]=1,
    [4933]=1,
    [4935]=1,
    [4936]=1,
    [4937]=1,
    [4938]=1,
    [4939]=1,
    [4940]=1,
    [4941]=1,
    [4942]=1,
    [4944]=1,
    [4945]=1,
    [4946]=1,
    [4947]=1,
    [4948]=1,
    [4952]=1,
    [4953]=1,
    [4954]=1,
    [4957]=1,
    [4958]=1,
    [4961]=1,
    [4962]=1,
    [4963]=1,
    [4964]=1,
    [4967]=1,
    [4968]=1,
    [4969]=1,
    [4970]=1,
    [4971]=1,
    [4972]=1,
    [4973]=1,
    [4974]=1,
    [4975]=1,
    [4976]=1,
    [4977]=1,
    [4978]=1,
    [4979]=1,
    [4980]=1,
    [4982]=1,
    [4983]=1,
    [4984]=1,
    [4986]=4,
    [4987]=1,
    [4992]=4,
    [4995]=4,
    [5006]=4,
    [5012]=4,
    [5016]=1,
    [5017]=4,
    [5018]=4,
    [5019]=4,
    [5021]=4,
    [5022]=4,
    [5023]=4,
    [5025]=4,
    [5026]=4,
    [5027]=4,
    [5030]=4,
    [5038]=4,
    [5040]=4,
    [5050]=4,
    [5054]=4,
    [5055]=4,
    [5056]=4,
    [5058]=4,
    [5059]=1,
    [5060]=1,
    [5061]=4,
    [5062]=4,
    [5063]=4,
    [5064]=4,
    [5065]=4,
    [5067]=4,
    [5068]=4,
    [5072]=4,
    [5073]=4,
    [5074]=4,
    [5076]=4,
    [5077]=4,
    [5078]=4,
    [5080]=4,
    [5084]=4,
    [5085]=4,
    [5086]=4,
    [5087]=4,
    [5088]=1,
    [5089]=4,
    [5092]=1,
    [5093]=1,
    [5094]=1,
    [5096]=4,
    [5097]=4,
    [5098]=4,
    [5099]=1,
    [5100]=4,
    [5101]=4,
    [5102]=1,
    [5103]=1,
    [5104]=4,
    [5138]=1,
    [5143]=4,
    [5164]=4,
    [5165]=4,
    [5166]=4,
    [5167]=4,
    [5168]=4,
    [5169]=4,
    [5170]=4,
    [5175]=1,
    [5176]=1,
    [5177]=1,
    [5178]=1,
    [5179]=1,
    [5184]=4,
    [5185]=4,
    [5186]=4,
    [5188]=4,
    [5189]=4,
    [5190]=4,
    [5191]=1,
    [5192]=1,
    [5193]=1,
    [5194]=1,
    [5195]=1,
    [5196]=1,
    [5197]=1,
    [5198]=1,
    [5199]=1,
    [5200]=1,
    [5201]=1,
    [5202]=1,
    [5203]=4,
    [5204]=4,
    [5217]=4,
    [5218]=4,
    [5219]=4,
    [5220]=4,
    [5221]=4,
    [5232]=1,
    [5233]=4,
    [5234]=4,
    [5240]=1,
    [5241]=1,
    [5242]=1,
    [5243]=1,
    [5244]=1,
    [5246]=1,
    [5247]=1,
    [5248]=1,
    [5249]=1,
    [5250]=1,
    [5251]=4,
    [5252]=1,
    [5253]=1,
    [5270]=4,
    [5271]=4,
    [5272]=4,
    [5273]=4,
    [5274]=1,
    [5275]=1,
    [5279]=1,
    [5299]=1,
    [5302]=1,
    [5306]=1,
    [5309]=1,
    [5310]=1,
    [5311]=1,
    [5312]=1,
    [5313]=1,
    [5314]=1,
    [5315]=1,
    [5316]=1,
    [5317]=1,
    [5318]=1,
    [5320]=1,
    [5321]=1,
    [5322]=1,
    [5323]=1,
    [5324]=1,
    [5325]=1,
    [5326]=1,
    [5327]=1,
    [5328]=1,
    [5332]=1,
    [5334]=4,
    [5335]=1,
    [5336]=4,
    [5337]=1,
    [5338]=4,
    [5339]=4,
    [5340]=1,
    [5341]=1,
    [5343]=1,
    [5344]=1,
    [5345]=1,
    [5346]=1,
    [5348]=4,
    [5351]=1,
    [5352]=1,
    [5354]=4,
    [5355]=1,
    [5356]=1,
    [5357]=1,
    [5359]=4,
    [5360]=4,
    [5366]=4,
    [5382]=4,
    [5383]=4,
    [5385]=4,
    [5386]=4,
    [5387]=1,
    [5388]=4,
    [5389]=4,
    [5390]=4,
    [5391]=4,
    [5392]=1,
    [5393]=1,
    [5394]=1,
    [5395]=1,
    [5396]=1,
    [5397]=1,
    [5398]=1,
    [5399]=1,
    [5405]=1,
    [5411]=4,
    [5412]=4,
    [5413]=4,
    [5414]=4,
    [5415]=4,
    [5416]=4,
    [5419]=1,
    [5420]=1,
    [5421]=1,
    [5424]=4,
    [5437]=4,
    [5440]=4,
    [5442]=4,
    [5443]=1,
    [5444]=1,
    [5445]=4,
    [5455]=4,
    [5456]=4,
    [5457]=1,
    [5458]=1,
    [5459]=1,
    [5460]=4,
    [5461]=4,
    [5462]=1,
    [5463]=4,
    [5464]=4,
    [5475]=4,
    [5481]=4,
    [5490]=4,
    [5493]=4,
    [5494]=4,
    [5505]=4,
    [5508]=4,
    [5513]=1,
    [5514]=1,
    [5519]=4,
    [5520]=4,
    [5521]=4,
    [5522]=1,
    [5533]=4,
    [5534]=4,
    [5535]=4,
    [5536]=4,
    [5537]=4,
    [5538]=4,
    [5539]=4,
    [5544]=4,
    [5547]=1,
    [5570]=4,
    [5579]=1,
    [5580]=1,
    [5581]=1,
    [5582]=4,
    [5583]=4,
    [5584]=4,
    [5585]=4,
    [5586]=1,
    [5587]=1,
    [5588]=4,
    [5589]=1,
    [5590]=1,
    [5591]=1,
    [5592]=1,
    [5593]=1,
    [5594]=4,
    [5595]=1,
    [5596]=1,
    [5604]=1,
    [5605]=1,
    [5606]=1,
    [5609]=1,
    [5610]=1,
    [5611]=1,
    [5612]=1,
    [5613]=1,
    [5614]=1,
    [5615]=1,
    [5617]=1,
    [5618]=1,
    [5619]=4,
    [5620]=4,
    [5621]=4,
    [5622]=1,
    [5623]=4,
    [5626]=1,
    [5627]=1,
    [5628]=4,
    [5629]=1,
    [5630]=1,
    [5638]=4,
    [5639]=4,
    [5645]=4,
    [5646]=4,
    [5655]=1,
    [5656]=1,
    [5659]=4,
    [5664]=4,
    [5665]=1,
    [5668]=1,
    [5669]=4,
    [5675]=4,
    [5681]=4,
    [5686]=4,
    [5687]=4,
    [5689]=4,
    [5690]=4,
    [5691]=4,
    [5692]=1,
    [5693]=1,
    [5694]=1,
    [5695]=1,
    [5717]=4,
    [5718]=4,
    [5731]=4,
    [5732]=4,
    [5733]=4,
    [5734]=4,
    [5735]=4,
    [5736]=4,
    [5737]=1,
    [5738]=4,
    [5757]=1,
    [5761]=1,
    [5776]=1,
    [5777]=1,
    [5778]=1,
    [5779]=1,
    [5790]=4,
    [5792]=4,
    [5793]=4,
    [5794]=4,
    [5795]=4,
    [5796]=4,
    [5797]=4,
    [5798]=4,
    [5799]=4,
    [5800]=4,
    [5801]=4,
    [5802]=4,
    [5803]=4,
    [5804]=4,
    [5805]=4,
    [5806]=4,
    [5807]=4,
    [5808]=4,
    [5809]=4,
    [5810]=4,
    [5811]=4,
    [5812]=1,
    [5813]=1,
    [5814]=1,
    [5815]=1,
    [5816]=1,
    [5817]=1,
    [5818]=1,
    [5820]=1,
    [5824]=4,
    [5825]=4,
    [5827]=4,
    [5830]=4,
    [5831]=4,
    [5832]=4,
    [5834]=4,
    [5835]=4,
    [5836]=4,
    [5837]=4,
    [5838]=4,
    [5840]=4,
    [5841]=4,
    [5842]=4,
    [5843]=4,
    [5844]=4,
    [5846]=4,
    [5847]=4,
    [5848]=4,
    [5849]=4,
    [5850]=4,
    [5851]=4,
    [5852]=4,
    [5853]=4,
    [5854]=4,
    [5855]=4,
    [5860]=4,
    [5861]=4,
    [5862]=4,
    [5863]=1,
    [5864]=1,
    [5865]=4,
    [5866]=4,
    [5867]=4,
    [5868]=4,
    [5869]=4,
    [5872]=1,
    [5873]=1,
    [5876]=4,
    [5877]=1,
    [5879]=4,
    [5880]=4,
    [5881]=4,
    [5882]=4,
    [5883]=4,
    [5884]=4,
    [5897]=4,
    [5917]=4,
    [5918]=4,
    [5919]=4,
    [5936]=1,
    [5938]=4,
    [5939]=1,
    [5940]=1,
    [5941]=1,
    [5942]=4,
    [5943]=1,
    [5944]=1,
    [5945]=4,
    [5946]=4,
    [5947]=4,
    [5948]=4,
    [5950]=4,
    [5951]=1,
    [5952]=4,
    [5959]=4,
    [5960]=4,
    [5970]=1,
    [5998]=4,
    [6016]=4,
    [6058]=1,
    [6059]=1,
    [6060]=1,
    [6061]=1,
    [6062]=1,
    [6063]=1,
    [6064]=4,
    [6065]=4,
    [6066]=4,
    [6067]=4,
    [6069]=4,
    [6070]=1,
    [6071]=4,
    [6072]=4,
    [6073]=4,
    [6074]=4,
    [6075]=4,
    [6076]=1,
    [6077]=4,
    [6078]=1,
    [6079]=4,
    [6080]=4,
    [6081]=4,
    [6082]=4,
    [6083]=4,
    [6084]=1,
    [6085]=1,
    [6086]=4,
    [6087]=1,
    [6089]=4,
    [6091]=4,
    [6092]=1,
    [6093]=1,
    [6094]=1,
    [6095]=1,
    [6145]=4,
    [6146]=4,
    [6166]=4,
    [6167]=4,
    [6168]=4,
    [6169]=4,
    [6170]=4,
    [6171]=1,
    [6172]=1,
    [6173]=1,
    [6175]=4,
    [6176]=1,
    [6177]=1,
    [6178]=4,
    [6181]=4,
    [6184]=4,
    [6185]=1,
    [6186]=1,
    [6187]=1,
    [6188]=1,
    [6189]=1,
    [6190]=4,
    [6191]=1,
    [6193]=4,
    [6194]=1,
    [6196]=1,
    [6212]=4,
    [6215]=1,
    [6218]=1,
    [6220]=1,
    [6223]=1,
    [6226]=1,
    [6245]=4,
    [6246]=4,
    [6247]=4,
    [6248]=4,
    [6249]=4,
    [6250]=4,
    [6251]=4,
    [6252]=4,
    [6253]=4,
    [6257]=4,
    [6258]=4,
    [6259]=4,
    [6265]=1,
    [6281]=4,
    [6282]=1,
    [6283]=4,
    [6284]=4,
    [6285]=4,
    [6286]=4,
    [6287]=4,
    [6288]=4,
    [6312]=4,
    [6313]=4,
    [6314]=1,
    [6318]=1,
    [6319]=1,
    [6320]=1,
    [6321]=1,
    [6323]=1,
    [6324]=1,
    [6335]=1,
    [6339]=1,
    [6340]=1,
    [6341]=1,
    [6392]=1,
    [6414]=1,
    [6435]=4,
    [6436]=1,
    [6441]=4,
    [6442]=4,
    [6443]=4,
    [6448]=1,
    [6449]=1,
    [6459]=1,
    [6460]=1,
    [6461]=1,
    [6462]=4,
    [6463]=1,
    [6464]=4,
    [6465]=1,
    [6469]=1,
    [6472]=1,
    [6473]=1,
    [6477]=1,
    [6479]=4,
    [6480]=1,
    [6481]=1,
    [6482]=1,
    [6486]=4,
    [6487]=4,
    [6488]=4,
    [6502]=1,
    [6503]=1,
    [6504]=1,
    [6505]=1,
    [6534]=4,
    [6535]=4,
    [6624]=4,
    [6625]=4,
    [6626]=4,
    [6627]=1,
    [6629]=1,
    [6630]=1,
    [6631]=1,
    [6632]=1,
    [6633]=1,
    [6634]=4,
    [6635]=1,
    [6636]=1,
    [6637]=1,
    [6640]=4,
    [6641]=1,
    [6642]=1,
    [6652]=4,
    [6653]=4,
    [6654]=4,
    [6655]=4,
    [6656]=4,
    [6658]=4,
    [6659]=1,
    [6664]=1,
    [6665]=1,
    [6666]=1,
    [6667]=1,
    [6668]=1,
    [6669]=1,
    [6670]=1,
    [6671]=1,
    [6675]=1,
    [6676]=1,
    [6677]=1,
    [6678]=1,
    [6679]=1,
    [6682]=1,
    [6684]=4,
    [6685]=1,
    [6686]=1,
    [6687]=1,
    [6688]=1,
    [6689]=1,
    [6690]=1,
    [6691]=1,
    [6692]=1,
    [6693]=1,
    [6694]=1,
    [6695]=1,
    [6696]=1,
    [6697]=1,
    [6713]=1,
    [6717]=4,
    [6718]=4,
    [6719]=1,
    [6720]=1,
    [6721]=1,
    [6722]=1,
    [6723]=1,
    [6725]=1,
    [6726]=1,
    [6727]=1,
    [6729]=1,
    [6732]=1,
    [6737]=1,
    [6738]=1,
    [6739]=1,
    [6740]=1,
    [6741]=1,
    [6742]=1,
    [6743]=1,
    [6744]=1,
    [6745]=1,
    [6746]=1,
    [6747]=1,
    [6748]=1,
    [6749]=1,
    [6750]=1,
    [6751]=1,
    [6752]=1,
    [6753]=4,
    [6755]=1,
    [6756]=1,
    [6757]=1,
    [6766]=1,
    [6767]=4,
    [6773]=1,
    [6774]=1,
    [6775]=1,
    [6776]=1,
    [6780]=1,
    [6781]=4,
    [6782]=4,
    [6783]=4,
    [6784]=1,
    [6785]=4,
    [6788]=1,
    [6789]=1,
    [6790]=1,
    [6791]=1,
    [6792]=1,
    [6793]=1,
    [6794]=1,
    [6797]=1,
    [6798]=1,
    [6799]=4,
    [6800]=4,
    [6801]=1,
    [6802]=1,
    [6803]=1,
    [6804]=1,
    [6805]=4,
    [6806]=1,
    [6808]=4,
    [6809]=4,
    [6810]=4,
    [6812]=4,
    [6828]=1,
    [6829]=1,
    [6830]=1,
    [6831]=1,
    [6832]=1,
    [6838]=4,
    [6839]=4,
    [6840]=4,
    [6841]=4,
    [6842]=4,
    [6843]=4,
    [6844]=4,
    [6845]=4,
    [6846]=4,
    [6847]=4,
    [6848]=4,
    [6849]=4,
    [6851]=4,
    [6866]=1,
    [6893]=1,
    [6894]=4,
    [6895]=4,
    [6898]=1,
    [6900]=1,
    [6901]=1,
    [6902]=1,
    [6903]=1,
    [6904]=1,
    [6905]=1,
    [6906]=1,
    [6907]=1,
    [6908]=1,
    [6909]=1,
    [6910]=1,
    [6911]=1,
    [6912]=4,
    [6913]=4,
    [6914]=4,
    [6915]=4,
    [6916]=1,
    [6926]=4,
    [6927]=4,
    [6928]=4,
    [6929]=4,
    [6930]=4,
    [6931]=4,
    [6948]=1,
    [6952]=4,
    [6953]=1,
    [6966]=1,
    [6967]=1,
    [6968]=1,
    [6969]=1,
    [6970]=1,
    [6971]=1,
    [6972]=1,
    [6973]=1,
    [6974]=1,
    [6975]=1,
    [6976]=1,
    [6977]=1,
    [6978]=1,
    [6979]=1,
    [6980]=1,
    [6981]=1,
    [6982]=1,
    [6983]=1,
    [6984]=1,
    [6985]=1,
    [6989]=4,
    [6990]=4,
    [6991]=4,
    [6992]=4,
    [6993]=4,
    [6994]=4,
    [6995]=4,
    [6996]=1,
    [6997]=4,
    [6998]=1,
    [6999]=4,
    [7000]=1,
    [7001]=1,
    [7002]=1,
    [7003]=1,
    [7004]=1,
    [7006]=4,
    [7054]=1,
    [7083]=4,
    [7106]=1,
    [7107]=1,
    [7115]=1,
    [7116]=1,
    [7117]=1,
    [7118]=1,
    [7119]=4,
    [7120]=1,
    [7126]=4,
    [7127]=4,
    [7128]=4,
    [7129]=1,
    [7130]=1,
    [7131]=4,
    [7132]=1,
    [7133]=1,
    [7134]=4,
    [7146]=1,
    [7206]=4,
    [7207]=4,
    [7208]=4,
    [7209]=4,
    [7226]=4,
    [7227]=4,
    [7229]=1,
    [7230]=1,
    [7231]=4,
    [7247]=4,
    [7249]=4,
    [7266]=4,
    [7267]=4,
    [7268]=4,
    [7269]=4,
    [7270]=4,
    [7271]=4,
    [7272]=4,
    [7273]=4,
    [7274]=4,
    [7291]=4,
    [7292]=4,
    [7293]=4,
    [7294]=4,
    [7295]=1,
    [7297]=1,
    [7298]=1,
    [7306]=4,
    [7308]=4,
    [7309]=4,
    [7326]=1,
    [7327]=1,
    [7328]=1,
    [7329]=1,
    [7333]=4,
    [7334]=1,
    [7335]=1,
    [7336]=1,
    [7343]=4,
    [7344]=1,
    [7345]=4,
    [7346]=4,
    [7365]=4,
    [7376]=4,
    [7389]=4,
    [7442]=1,
    [7464]=4,
    [7498]=4,
    [7499]=4,
    [7500]=4,
    [7507]=1,
    [7508]=1,
    [7509]=1,
    [7510]=1,
    [7511]=1,
    [7512]=1,
    [7513]=1,
    [7514]=1,
    [7515]=1,
    [7516]=1,
    [7566]=4,
    [7567]=4,
    [7568]=4,
    [7569]=4,
    [7586]=4,
    [7587]=1,
    [7606]=1,
    [7607]=1,
    [7626]=4,
    [7627]=4,
    [7628]=4,
    [7629]=4,
    [7646]=4,
    [7666]=1,
    [7667]=4,
    [7668]=1,
    [7669]=4,
    [7670]=4,
    [7671]=4,
    [7672]=4,
    [7673]=1,
    [7674]=4,
    [7675]=4,
    [7679]=4,
    [7680]=4,
    [7682]=1,
    [7684]=1,
    [7685]=1,
    [7686]=1,
    [7687]=1,
    [7688]=1,
    [7689]=1,
    [7690]=1,
    [7691]=1,
    [7708]=1,
    [7709]=1,
    [7710]=1,
    [7711]=1,
    [7712]=1,
    [7713]=1,
    [7714]=1,
    [7715]=4,
    [7717]=1,
    [7718]=1,
    [7719]=1,
    [7720]=1,
    [7721]=1,
    [7722]=1,
    [7723]=1,
    [7724]=1,
    [7726]=1,
    [7731]=1,
    [7733]=4,
    [7735]=4,
    [7737]=4,
    [7738]=1,
    [7739]=1,
    [7746]=1,
    [7747]=1,
    [7748]=1,
    [7749]=1,
    [7750]=1,
    [7751]=1,
    [7756]=1,
    [7766]=4,
    [7767]=4,
    [7768]=4,
    [7769]=4,
    [7770]=4,
    [7771]=4,
    [7810]=4,
    [7811]=4,
    [7812]=4,
    [7813]=4,
    [7846]=4,
    [7847]=4,
    [7848]=4,
    [7866]=1,
    [7867]=4,
    [7870]=4,
    [7871]=4,
    [7886]=4,
    [7887]=4,
    [7888]=1,
    [7906]=4,
    [7907]=1,
    [7908]=4,
    [7923]=4,
    [7968]=4,
    [7970]=1,
    [7983]=1,
    [7984]=1,
    [7985]=1,
    [7997]=1,
    [8007]=1,
    [8008]=1,
    [8009]=4,
    [8026]=4,
    [8027]=4,
    [8029]=1,
    [8030]=1,
    [8046]=1,
    [8047]=4,
    [8048]=4,
    [8049]=4,
    [8050]=1,
    [8051]=1,
    [8052]=4,
    [8053]=4,
    [8066]=1,
    [8070]=4,
    [8071]=1,
    [8072]=4,
    [8073]=4,
    [8074]=4,
    [8087]=4,
    [8095]=1,
    [8136]=4,
    [8149]=4,
    [8155]=4,
    [8344]=4,
    [8363]=4,
    [8403]=1,
    [8404]=1,
    [8405]=1,
    [8406]=1,
    [8407]=1,
    [8408]=1,
    [8410]=1,
    [8411]=1,
    [8412]=1,
    [8423]=1,
    [8424]=1,
    [8428]=4,
    [8431]=4,
    [8432]=1,
    [8443]=4,
    [8463]=4,
    [8484]=1,
    [8523]=4,
    [8524]=1,
    [8525]=4,
    [8526]=4,
    [8527]=4,
    [8528]=4,
    [8529]=1,
    [8548]=4,
    [8563]=1,
    [8564]=1,
    [8584]=4,
    [8585]=4,
    [8586]=1,
    [8587]=4,
    [8588]=1,
    [8591]=1,
    [8592]=1,
    [8593]=4,
    [8594]=4,
    [8595]=1,
    [8603]=4,
    [8623]=1,
    [8628]=1,
    [8629]=1,
    [8631]=1,
    [8632]=1,
    [8643]=1,
    [8644]=1,
    [8645]=1,
    [8646]=1,
    [8647]=1,
    [8663]=4,
    [8683]=1,
    [8684]=4,
    [8686]=4,
    [8687]=4,
    [8703]=1,
    [8704]=1,
    [8705]=1,
    [8707]=4,
    [8708]=1,
    [8723]=4,
    [8724]=4,
    [8973]=4,
    [9149]=1,
    [9153]=4,
    [9173]=4,
    [9189]=4,
    [9214]=1,
    [9234]=4,
    [9235]=4,
    [9236]=4,
    [9237]=4,
    [9238]=4,
    [9240]=1,
    [9241]=1,
    [9243]=1,
    [9244]=4,
    [9245]=4,
    [9246]=4,
    [9247]=4,
    [9248]=4,
    [9250]=1,
    [9255]=1,
    [9256]=1,
    [9257]=1,
    [9258]=1,
    [9263]=4,
    [9266]=4,
    [9275]=4,
    [9277]=4,
    [9278]=4,
    [9279]=1,
    [9280]=4,
    [9281]=4,
    [9282]=4,
    [9283]=4,
    [9284]=4,
    [9299]=4,
    [9306]=4,
    [9307]=4,
    [9309]=4,
    [9316]=4,
    [9319]=4,
    [9320]=4,
    [9321]=4,
    [9322]=4,
    [9323]=4,
    [9324]=4,
    [9326]=1,
    [9328]=4,
    [9329]=4,
    [9330]=4,
    [9331]=4,
    [9362]=1,
    [9363]=1,
    [9364]=4,
    [9365]=4,
    [9368]=4,
    [9369]=4,
    [9370]=1,
    [9371]=4,
    [9372]=1,
    [9379]=1,
    [9387]=1,
    [9388]=1,
    [9389]=1,
    [9390]=1,
    [9394]=1,
    [9401]=1,
    [9404]=1,
    [9407]=1,
    [9408]=1,
    [9409]=1,
    [9410]=1,
    [9411]=1,
    [9412]=1,
    [9413]=1,
    [9414]=1,
    [9415]=1,
    [9416]=1,
    [9418]=1,
    [9419]=1,
    [9436]=4,
    [9437]=4,
    [9438]=4,
    [9439]=4,
    [9440]=4,
    [9441]=4,
    [9442]=4,
    [9445]=1,
    [9446]=1,
    [9447]=1,
    [9448]=1,
    [9449]=1,
    [9450]=1,
    [9452]=1,
    [9453]=1,
    [9454]=1,
    [9455]=1,
    [9456]=1,
    [9457]=1,
    [9458]=1,
    [9459]=1,
    [9460]=4,
    [9461]=1,
    [9462]=4,
    [9463]=4,
    [9466]=4,
    [9467]=1,
    [9468]=4,
    [9469]=1,
    [9470]=1,
    [9471]=4,
    [9472]=4,
    [9473]=1,
    [9474]=1,
    [9475]=1,
    [9476]=1,
    [9477]=1,
    [9478]=1,
    [9479]=1,
    [9489]=1,
    [9492]=1,
    [9507]=4,
    [9513]=1,
    [9514]=1,
    [9515]=1,
    [9516]=1,
    [9517]=1,
    [9518]=1,
    [9519]=1,
    [9520]=1,
    [9521]=1,
    [9522]=1,
    [9523]=4,
    [9527]=1,
    [9528]=4,
    [9530]=4,
    [9531]=1,
    [9533]=1,
    [9534]=1,
    [9535]=1,
    [9536]=1,
    [9538]=1,
    [9542]=4,
    [9543]=4,
    [9544]=4,
    [9545]=4,
    [9546]=4,
    [9547]=4,
    [9548]=4,
    [9550]=4,
    [9551]=4,
    [9552]=4,
    [9553]=4,
    [9554]=4,
    [9555]=4,
    [9556]=4,
    [9557]=4,
    [9558]=4,
    [9559]=4,
    [9560]=4,
    [9561]=4,
    [9562]=4,
    [9563]=4,
    [9564]=4,
    [9565]=4,
    [9566]=4,
    [9567]=4,
    [9568]=4,
    [9569]=4,
    [9570]=4,
    [9571]=4,
    [9572]=4,
    [9573]=4,
    [9574]=4,
    [9575]=4,
    [9576]=4,
    [9577]=4,
    [9578]=4,
    [9579]=4,
    [9580]=4,
    [9581]=4,
    [9587]=1,
    [9588]=1,
    [9589]=4,
    [9590]=4,
    [9591]=4,
    [9592]=4,
    [9593]=4,
    [9594]=4,
    [9595]=4,
    [9596]=4,
    [9597]=4,
    [9598]=1,
    [9599]=1,
    [9600]=1,
    [9601]=1,
    [9602]=1,
    [9603]=1,
    [9604]=1,
    [9605]=1,
    [9606]=4,
    [9607]=1,
    [9608]=1,
    [9609]=1,
    [9618]=4,
    [9619]=4,
    [9620]=4,
    [9621]=4,
    [9622]=1,
    [9623]=1,
    [9624]=1,
    [9625]=1,
    [9626]=1,
    [9627]=1,
    [9628]=4,
    [9629]=4,
    [9630]=1,
    [9631]=1,
    [9632]=1,
    [9633]=1,
    [9634]=1,
    [9635]=1,
    [9636]=1,
    [9637]=1,
    [9638]=1,
    [9639]=1,
    [9640]=1,
    [9641]=1,
    [9642]=1,
    [9643]=1,
    [9644]=1,
    [9645]=1,
    [9646]=1,
    [9647]=1,
    [9648]=1,
    [9649]=1,
    [9650]=1,
    [9651]=1,
    [9652]=1,
    [9653]=1,
    [9654]=1,
    [9655]=1,
    [9656]=1,
    [9657]=1,
    [9658]=1,
    [9660]=1,
    [9661]=1,
    [9662]=1,
    [9663]=1,
    [9664]=1,
    [9665]=1,
    [9666]=1,
    [9678]=1,
    [9679]=1,
    [9680]=1,
    [9682]=1,
    [9683]=1,
    [9684]=1,
    [9686]=1,
    [9687]=1,
    [9698]=1,
    [9699]=1,
    [9703]=1,
    [9704]=1,
    [9705]=1,
    [9706]=1,
    [9738]=4,
    [9739]=4,
    [9740]=4,
    [9741]=4,
    [9978]=4,
    [10000]=1,
    [10005]=4,
    [10022]=4,
    [10043]=1,
    [10283]=4,
    [10298]=1,
    [10299]=1,
    [10327]=4,
    [10330]=1,
    [10338]=4,
    [10358]=1,
    [10359]=1,
    [10399]=1,
    [10410]=1,
    [10411]=1,
    [10412]=1,
    [10414]=4,
    [10418]=1,
    [10420]=4,
    [10438]=4,
    [10439]=4,
    [10440]=4,
    [10441]=1,
    [10442]=4,
    [10443]=1,
    [10444]=4,
    [10445]=4,
    [10446]=4,
    [10447]=4,
    [10454]=1,
    [10455]=1,
    [10456]=1,
    [10458]=4,
    [10459]=4,
    [10461]=1,
    [10462]=1,
    [10464]=4,
    [10465]=4,
    [10466]=4,
    [10467]=4,
    [10479]=1,
    [10509]=4,
    [10511]=4,
    [10515]=4,
    [10538]=4,
    [10539]=4,
    [10540]=4,
    [10541]=4,
    [10542]=1,
    [10543]=1,
    [10544]=1,
    [10545]=1,
    [10547]=1,
    [10549]=1,
    [10550]=1,
    [10551]=4,
    [10552]=4,
    [10556]=4,
    [10563]=4,
    [10564]=4,
    [10565]=4,
    [10566]=4,
    [10569]=1,
    [10575]=1,
    [10587]=1,
    [10589]=4,
    [10590]=1,
    [10597]=4,
    [10598]=4,
    [10599]=4,
    [10600]=4,
    [10610]=4,
    [10621]=1,
    [10622]=4,
    [10635]=1,
    [10636]=1,
    [10637]=1,
    [10638]=1,
    [10639]=4,
    [10640]=4,
    [10641]=4,
    [10642]=4,
    [10643]=4,
    [10645]=1,
    [10649]=4,
    [10652]=1,
    [10653]=1,
    [10654]=1,
    [10655]=1,
    [10656]=1,
    [10657]=1,
    [10658]=1,
    [10659]=1,
    [10660]=4,
    [10661]=4,
    [10662]=4,
    [10663]=4,
    [10664]=1,
    [10678]=4,
    [10679]=4,
    [10680]=4,
    [10681]=4,
    [10682]=4,
    [10684]=1,
    [10686]=1,
    [10687]=1,
    [10688]=1,
    [10689]=1,
    [10690]=1,
    [10691]=4,
    [10692]=4,
    [10693]=4,
    [10694]=4,
    [10695]=1,
    [10696]=1,
    [10697]=1,
    [10698]=1,
    [10699]=4,
    [10700]=1,
    [10701]=1,
    [10702]=1,
    [10703]=1,
    [10704]=1,
    [10705]=1,
    [10706]=1,
    [10707]=1,
    [10708]=1,
    [10709]=1,
    [10710]=1,
    [10711]=1,
    [10712]=4,
    [10714]=4,
    [10715]=4,
    [10717]=4,
    [10718]=4,
    [10722]=4,
    [10725]=1,
    [10727]=1,
    [10738]=4,
    [10739]=1,
    [10740]=1,
    [10741]=1,
    [10742]=1,
    [10743]=1,
    [10744]=1,
    [10745]=1,
    [10746]=1,
    [10747]=1,
    [10748]=1,
    [10749]=1,
    [10750]=1,
    [10751]=1,
    [10752]=1,
    [10753]=4,
    [10754]=4,
    [10755]=4,
    [10757]=4,
    [10758]=1,
    [10759]=4,
    [10760]=1,
    [10761]=1,
    [10762]=1,
    [10763]=1,
    [10764]=1,
    [10765]=1,
    [10766]=1,
    [10767]=1,
    [10768]=1,
    [10769]=1,
    [10770]=1,
    [10771]=1,
    [10772]=1,
    [10773]=1,
    [10774]=1,
    [10775]=1,
    [10776]=1,
    [10777]=1,
    [10778]=1,
    [10779]=1,
    [10780]=1,
    [10781]=1,
    [10782]=1,
    [10783]=1,
    [10784]=1,
    [10785]=1,
    [10786]=1,
    [10787]=1,
    [10788]=1,
    [10789]=4,
    [10790]=1,
    [10791]=1,
    [10792]=4,
    [10793]=4,
    [10794]=4,
    [10795]=1,
    [10796]=1,
    [10797]=1,
    [10798]=1,
    [10799]=1,
    [10800]=1,
    [10801]=1,
    [10802]=1,
    [10803]=1,
    [10804]=1,
    [10805]=1,
    [10806]=1,
    [10807]=1,
    [10808]=1,
    [10818]=1,
    [10819]=4,
    [10820]=1,
    [10821]=1,
    [10823]=1,
    [10824]=1,
    [10826]=1,
    [10827]=1,
    [10828]=1,
    [10829]=1,
    [10830]=1,
    [10831]=1,
    [10832]=1,
    [10833]=1,
    [10834]=1,
    [10835]=1,
    [10836]=1,
    [10837]=1,
    [10838]=1,
    [10842]=1,
    [10843]=1,
    [10844]=1,
    [10845]=1,
    [10846]=1,
    [10847]=1,
    [10919]=1,
    [10958]=4,
    [10959]=1,
    [10999]=4,
    [11000]=4,
    [11020]=1,
    [11024]=1,
    [11058]=4,
    [11079]=4,
    [11080]=4,
    [11086]=1,
    [11102]=1,
    [11103]=4,
    [11104]=4,
    [11105]=4,
    [11106]=4,
    [11107]=4,
    [11110]=1,
    [11112]=4,
    [11113]=4,
    [11114]=4,
    [11116]=1,
    [11118]=1,
    [11119]=4,
    [11120]=1,
    [11121]=1,
    [11122]=1,
    [11123]=1,
    [11124]=1,
    [11125]=4,
    [11126]=4,
    [11127]=4,
    [11129]=4,
    [11130]=1,
    [11131]=4,
    [11132]=4,
    [11133]=4,
    [11136]=4,
    [11140]=1,
    [11141]=4,
    [11142]=4,
    [11143]=4,
    [11145]=1,
    [11146]=4,
    [11147]=4,
    [11148]=4,
    [11149]=4,
    [11162]=4,
    [11169]=4,
    [11172]=4,
    [11173]=4,
    [11179]=4,
    [11187]=1,
    [11189]=1,
    [11190]=1,
    [11191]=1,
    [11192]=1,
    [11193]=1,
    [11194]=1,
    [11195]=1,
    [11196]=1,
    [11222]=4,
    [11227]=4,
    [11229]=1,
    [11230]=4,
    [11231]=1,
    [11243]=4,
    [11262]=1,
    [11263]=1,
    [11265]=1,
    [11266]=4,
    [11267]=4,
    [11268]=4,
    [11269]=4,
    [11270]=4,
    [11282]=4,
    [11283]=4,
    [11286]=4,
    [11309]=4,
    [11310]=1,
    [11311]=1,
    [11312]=4,
    [11313]=4,
    [11315]=1,
    [11316]=4,
    [11318]=4,
    [11319]=4,
    [11320]=4,
    [11324]=1,
    [11364]=1,
    [11366]=4,
    [11367]=4,
    [11368]=4,
    [11405]=4,
    [11412]=4,
    [11413]=4,
    [11422]=1,
    [11423]=1,
    [11445]=4,
    [11446]=1,
    [11462]=4,
    [11463]=1,
    [11464]=4,
    [11465]=4,
    [11466]=4,
    [11467]=4,
    [11468]=4,
    [11469]=1,
    [11470]=4,
    [11471]=1,
    [11472]=4,
    [11474]=1,
    [11475]=1,
    [11476]=4,
    [11477]=4,
    [11478]=4,
    [11479]=4,
    [11480]=4,
    [11482]=4,
    [11502]=1,
    [11503]=4,
    [11504]=4,
    [11507]=4,
    [11508]=1,
    [11509]=4,
    [11510]=4,
    [11511]=4,
    [11512]=1,
    [11513]=1,
    [11514]=1,
    [11515]=1,
    [11516]=1,
    [11522]=4,
    [11562]=1,
    [11563]=1,
    [11564]=1,
    [11565]=1,
    [11566]=1,
    [11567]=1,
    [11568]=4,
    [11569]=1,
    [11570]=1,
    [11582]=1,
    [11583]=4,
    [11604]=1,
    [11614]=1,
    [11615]=1,
    [11617]=4,
    [11622]=4,
    [11623]=1,
    [11624]=1,
    [11625]=1,
    [11626]=1,
    [11627]=1,
    [11628]=1,
    [11629]=1,
    [11631]=1,
    [11632]=1,
    [11633]=1,
    [11634]=1,
    [11635]=1,
    [11642]=4,
    [11643]=4,
    [11644]=4,
    [11645]=4,
    [11646]=4,
    [11647]=4,
    [11648]=4,
    [11649]=4,
    [11662]=1,
    [11665]=1,
    [11668]=1,
    [11669]=1,
    [11674]=4,
    [11675]=1,
    [11677]=1,
    [11678]=1,
    [11679]=1,
    [11682]=4,
    [11684]=1,
    [11685]=1,
    [11686]=1,
    [11702]=1,
    [11703]=1,
    [11722]=1,
    [11723]=4,
    [11724]=4,
    [11725]=4,
    [11726]=1,
    [11727]=4,
    [11728]=1,
    [11729]=1,
    [11730]=1,
    [11731]=1,
    [11735]=1,
    [11742]=1,
    [11743]=1,
    [11744]=1,
    [11745]=1,
    [11746]=1,
    [11747]=1,
    [11748]=1,
    [11749]=1,
    [11750]=1,
    [11751]=1,
    [11752]=1,
    [11753]=1,
    [11755]=1,
    [11764]=1,
    [11765]=1,
    [11766]=1,
    [11767]=1,
    [11768]=1,
    [11782]=1,
    [11783]=1,
    [11784]=1,
    [11785]=1,
    [11786]=1,
    [11787]=1,
    [11802]=1,
    [11803]=1,
    [11804]=4,
    [11805]=1,
    [11807]=1,
    [11808]=1,
    [11809]=1,
    [11810]=1,
    [11811]=1,
    [11812]=1,
    [11814]=1,
    [11815]=1,
    [11816]=1,
    [11817]=1,
    [11819]=1,
    [11820]=1,
    [11821]=1,
    [11822]=1,
    [11823]=1,
    [11824]=1,
    [11825]=1,
    [11826]=1,
    [11827]=1,
    [11828]=1,
    [11829]=4,
    [11830]=4,
    [11831]=4,
    [11832]=1,
    [11833]=4,
    [11834]=4,
    [11835]=4,
    [11837]=4,
    [11839]=1,
    [11840]=1,
    [11841]=1,
    [11842]=1,
    [11843]=4,
    [11844]=4,
    [11845]=1,
    [11847]=1,
    [11848]=1,
    [11849]=1,
    [11850]=1,
    [11851]=1,
    [11852]=1,
    [11853]=1,
    [11854]=1,
    [11855]=1,
    [11856]=1,
    [11857]=1,
    [11858]=1,
    [11859]=1,
    [11860]=1,
    [11861]=1,
    [11862]=1,
    [11863]=1,
    [11864]=1,
    [11865]=1,
    [11866]=1,
    [11867]=1,
    [11868]=1,
    [11869]=1,
    [11870]=1,
    [11871]=1,
    [11872]=1,
    [11873]=1,
    [11874]=1,
    [11875]=1,
    [11876]=1,
    [11882]=1,
    [11883]=1,
    [11884]=1,
    [11886]=4,
    [11887]=1,
    [11888]=1,
    [11889]=1,
    [11902]=1,
    [11904]=1,
    [11905]=1,
    [11906]=1,
    [11907]=1,
    [11908]=1,
    [11909]=1,
    [11910]=1,
    [11911]=1,
    [11912]=4,
    [11913]=1,
    [11914]=1,
    [11915]=1,
    [11916]=1,
    [11917]=1,
    [11918]=1,
    [11919]=1,
    [11920]=1,
    [11921]=1,
    [11922]=1,
    [11923]=1,
    [11924]=1,
    [11925]=1,
    [11926]=1,
    [11927]=1,
    [11928]=1,
    [11929]=1,
    [11930]=1,
    [11931]=1,
    [11932]=1,
    [11933]=1,
    [11934]=1,
    [11935]=1,
    [11936]=1,
    [11945]=1,
    [11946]=1,
    [11947]=4,
    [11948]=1,
    [11949]=4,
    [11950]=1,
    [11951]=1,
    [11952]=1,
    [11953]=1,
    [11954]=4,
    [11955]=4,
    [11962]=1,
    [11963]=1,
    [11964]=1,
    [12000]=1,
    [12018]=1,
    [12021]=1,
    [12038]=1,
    [12041]=1,
    [12049]=1,
    [12050]=1,
    [12051]=1,
    [12059]=1,
    [12060]=4,
    [12061]=1,
    [12062]=1,
    [12064]=1,
    [12065]=1,
    [12066]=1,
    [12082]=1,
    [12083]=1,
    [12102]=1,
    [12103]=1,
    [12108]=1,
    [12109]=1,
    [12110]=1,
    [12111]=1,
    [12112]=1,
    [12113]=1,
    [12114]=1,
    [12115]=1,
    [12122]=1,
    [12144]=1,
    [12185]=1,
    [12191]=4,
    [12192]=4,
    [12220]=4,
    [12225]=1,
    [12230]=4,
    [12234]=4,
    [12235]=4,
    [12236]=4,
    [12237]=4,
    [12241]=4,
    [12242]=4,
    [12243]=1,
    [12262]=4,
    [12263]=4,
    [12264]=1,
    [12283]=4,
    [12287]=4,
    [12288]=1,
    [12289]=4,
    [12291]=4,
    [12292]=4,
    [12293]=4,
    [12295]=1,
    [12296]=1,
    [12299]=1,
    [12300]=1,
    [12301]=4,
    [12302]=1,
    [12303]=1,
    [12323]=1,
    [12324]=4,
    [12325]=1,
    [12326]=1,
    [12327]=1,
    [12330]=1,
    [12334]=4,
    [12335]=1,
    [12336]=1,
    [12337]=1,
    [12339]=1,
    [12341]=4,
    [12342]=4,
    [12343]=4,
    [12344]=1,
    [12345]=4,
    [12346]=4,
    [12347]=4,
    [12349]=4,
    [12350]=4,
    [12351]=1,
    [12352]=4,
    [12353]=1,
    [12354]=1,
    [12355]=4,
    [12356]=4,
    [12358]=4,
    [12366]=4,
    [12367]=4,
    [12368]=4,
    [12382]=1,
    [12383]=4,
    [12384]=1,
    [12402]=4,
    [12411]=4,
    [12412]=4,
    [12437]=4,
    [12438]=4,
    [12444]=4,
    [12446]=1,
    [12447]=1,
    [12448]=1,
    [12449]=1,
    [12450]=1,
    [12451]=1,
    [12455]=1,
    [12457]=1,
    [12458]=1,
    [12459]=1,
    [12460]=1,
    [12462]=1,
    [12463]=1,
    [12464]=1,
    [12465]=1,
    [12466]=1,
    [12467]=4,
    [12470]=1,
    [12471]=1,
    [12472]=4,
    [12522]=1,
    [12524]=4,
    [12525]=4,
    [12529]=1,
    [12530]=4,
    [12533]=1,
    [12534]=1,
    [12543]=1,
    [12544]=1,
    [12545]=1,
    [12548]=1,
    [12553]=1,
    [12554]=1,
    [12556]=1,
    [12557]=1,
    [12558]=1,
    [12562]=4,
    [12563]=1,
    [12564]=1,
    [12565]=4,
    [12566]=4,
    [12567]=4,
    [12582]=1,
    [12583]=1,
    [12584]=1,
    [12587]=1,
    [12588]=1,
    [12589]=1,
    [12590]=1,
    [12592]=1,
    [12602]=1,
    [12603]=1,
    [12604]=1,
    [12605]=1,
    [12606]=1,
    [12608]=1,
    [12609]=1,
    [12621]=1,
    [12622]=4,
    [12623]=4,
    [12626]=1,
    [12627]=4,
    [12630]=4,
    [12634]=1,
    [12635]=4,
    [12637]=1,
    [12638]=4,
    [12642]=4,
    [12646]=1,
    [12647]=1,
    [12648]=4,
    [12649]=4,
    [12650]=1,
    [12651]=1,
    [12652]=4,
    [12653]=1,
    [12654]=1,
    [12662]=1,
    [12663]=4,
    [12687]=1,
    [12688]=1,
    [12690]=1,
    [12696]=1,
    [12699]=1,
    [12700]=1,
    [12701]=1,
    [12705]=1,
    [12706]=1,
    [12707]=1,
    [12708]=4,
    [12709]=1,
    [12710]=4,
    [12712]=4,
    [12714]=1,
    [12715]=1,
    [12718]=1,
    [12719]=1,
    [12721]=4,
    [12722]=4,
    [12723]=4,
    [12724]=4,
    [12725]=1,
    [12726]=1,
    [12727]=1,
    [12730]=1,
    [12732]=4,
    [12733]=4,
    [12734]=1,
    [12735]=1,
    [12736]=1,
    [12737]=4,
    [12738]=1,
    [12739]=1,
    [12740]=4,
    [12741]=4,
    [12752]=1,
    [12753]=1,
    [12756]=1,
    [12757]=1,
    [12765]=4,
    [12766]=4,
    [12768]=4,
    [12770]=4,
    [12771]=1,
    [12773]=1,
    [12780]=1,
    [12782]=1,
    [12785]=4,
    [12791]=1,
    [12793]=1,
    [12806]=1,
    [12807]=4,
    [12812]=1,
    [12813]=4,
    [12814]=4,
    [12815]=4,
    [12819]=1,
    [12822]=4,
    [12823]=1,
    [12829]=4,
    [12840]=1,
    [12841]=1,
    [12842]=1,
    [12843]=1,
    [12844]=1,
    [12846]=1,
    [12847]=4,
    [12848]=1,
    [12849]=1,
    [12871]=1,
    [12884]=4,
    [12885]=4,
    [12886]=4,
    [12887]=4,
    [12888]=4,
    [12891]=4,
    [12894]=4,
    [12895]=1,
    [12896]=4,
    [12897]=4,
    [12898]=4,
    [12899]=4,
    [12900]=4,
    [12903]=1,
    [12905]=1,
    [12906]=4,
    [12907]=4,
    [12922]=1,
    [12923]=4,
    [12924]=1,
    [12925]=4,
    [12926]=1,
    [12927]=1,
    [12928]=4,
    [12929]=1,
    [12930]=1,
    [12935]=1,
    [12936]=1,
    [12938]=1,
    [12939]=1,
    [12940]=1,
    [12942]=4,
    [12945]=1,
    [12946]=4,
    [12952]=1,
    [12953]=1,
    [12954]=4,
    [12955]=4,
    [12956]=4,
    [12957]=4,
    [12960]=1,
    [12963]=1,
    [12964]=1,
    [12965]=1,
    [12966]=1,
    [12967]=1,
    [12968]=1,
    [12969]=1,
    [13086]=1,
    [13098]=1,
    [13140]=1,
    [13141]=1,
    [13142]=1,
    [13143]=1,
    [13148]=1,
    [13155]=4,
    [13156]=4,
    [13157]=4,
    [13158]=1,
    [13161]=1,
    [13162]=1,
    [13163]=1,
    [13164]=1,
    [13166]=1,
    [13167]=1,
    [13168]=1,
    [13169]=1,
    [13170]=1,
    [13171]=1,
    [13172]=4,
    [13173]=1,
    [13174]=4,
    [13175]=1,
    [13176]=4,
    [13177]=1,
    [13178]=1,
    [13179]=1,
    [13180]=1,
    [13181]=1,
    [13182]=1,
    [13183]=1,
    [13184]=1,
    [13185]=1,
    [13186]=4,
    [13187]=4,
    [13188]=4,
    [13189]=4,
    [13190]=4,
    [13191]=4,
    [13192]=4,
    [13193]=4,
    [13194]=4,
    [13195]=4,
    [13196]=4,
    [13197]=4,
    [13198]=1,
    [13202]=4,
    [13203]=1,
    [13204]=1,
    [13205]=1,
    [13206]=1,
    [13207]=4,
    [13208]=1,
    [13209]=1,
    [13210]=1,
    [13211]=1,
    [13212]=1,
    [13213]=1,
    [13216]=1,
    [13217]=1,
    [13218]=1,
    [13243]=1,
    [13244]=1,
    [13245]=1,
    [13246]=1,
    [13248]=1,
    [13249]=1,
    [13250]=1,
    [13251]=4,
    [13252]=1,
    [13253]=1,
    [13254]=1,
    [13255]=1,
    [13257]=1,
    [13258]=1,
    [13259]=1,
    [13261]=1,
    [13262]=1,
    [13282]=1,
    [13283]=1,
    [13284]=1,
    [13285]=1,
    [13286]=1,
    [13289]=4,
    [13313]=4,
    [13314]=1,
    [13315]=1,
    [13317]=1,
    [13320]=4,
    [13321]=1,
    [13322]=1,
    [13326]=1,
    [13327]=1,
    [13328]=1,
    [13329]=1,
    [13331]=1,
    [13332]=1,
    [13333]=1,
    [13334]=1,
    [13335]=1,
    [13340]=1,
    [13344]=1,
    [13345]=1,
    [13346]=1,
    [13347]=4,
    [13348]=1,
    [13349]=1,
    [13350]=4,
    [13351]=4,
    [13352]=4,
    [13353]=1,
    [13354]=1,
    [13356]=1,
    [13357]=1,
    [13358]=1,
    [13359]=1,
    [13360]=1,
    [13361]=1,
    [13368]=1,
    [13369]=1,
    [13370]=4,
    [13371]=1,
    [13372]=1,
    [13373]=1,
    [13374]=1,
    [13375]=1,
    [13376]=1,
    [13377]=1,
    [13378]=1,
    [13379]=1,
    [13380]=1,
    [13381]=1,
    [13382]=1,
    [13383]=1,
    [13384]=1,
    [13385]=1,
    [13386]=1,
    [13387]=1,
    [13388]=1,
    [13389]=1,
    [13390]=1,
    [13391]=1,
    [13392]=1,
    [13393]=1,
    [13394]=1,
    [13395]=1,
    [13396]=1,
    [13397]=1,
    [13398]=1,
    [13399]=1,
    [13400]=1,
    [13401]=1,
    [13402]=1,
    [13403]=1,
    [13404]=1,
    [13405]=1,
    [13408]=1,
    [13409]=1,
    [13448]=4,
    [13450]=4,
    [13451]=4,
    [13469]=4,
    [13470]=4,
    [13471]=4,
    [13473]=1,
    [13474]=1,
    [13475]=1,
    [13482]=1,
    [13483]=1,
    [13484]=1,
    [13485]=1,
    [13498]=1,
    [13501]=1,
    [13502]=1,
    [13505]=1,
    [13507]=4,
    [13508]=1,
    [13509]=1,
    [13514]=1,
    [13515]=1,
    [13523]=1,
    [13524]=1,
    [13525]=1,
    [13526]=1,
    [13527]=1,
    [13528]=1,
    [13529]=1,
    [13530]=1,
    [13531]=1,
    [13532]=1,
    [13533]=1,
    [13534]=1,
    [13535]=1,
    [13536]=4,
    [13537]=1,
    [13538]=1,
    [13539]=1,
    [13542]=4,
    [13544]=1,
    [13562]=4,
    [13582]=1,
    [13583]=1,
    [13584]=1,
    [13585]=4,
    [13602]=1,
    [13603]=1,
    [13624]=4,
    [13626]=4,
    [13699]=1,
    [13700]=1,
    [13701]=1,
    [13702]=4,
    [13703]=4,
    [13704]=4,
    [13725]=4,
    [13752]=4,
    [13761]=4,
    [13810]=1,
    [13813]=1,
    [13815]=4,
    [13850]=4,
    [13852]=4,
    [13853]=4,
    [13872]=4,
    [13873]=1,
    [13892]=4,
    [13920]=1,
    [13937]=1,
    [13938]=1,
    [13944]=1,
    [13950]=1,
    [13951]=1,
    [13952]=1,
    [13953]=1,
    [13954]=1,
    [13955]=1,
    [13956]=1,
    [13957]=1,
    [13958]=1,
    [13959]=1,
    [13960]=1,
    [13961]=1,
    [13962]=1,
    [13963]=1,
    [13964]=1,
    [13965]=1,
    [13966]=1,
    [13967]=1,
    [13968]=1,
    [13969]=1,
    [13982]=1,
    [13983]=1,
    [13984]=1,
    [13986]=1,
    [14002]=1,
    [14022]=1,
    [14023]=1,
    [14024]=1,
    [14145]=1,
    [14147]=1,
    [14148]=1,
    [14149]=1,
    [14150]=1,
    [14151]=1,
    [14152]=1,
    [14153]=1,
    [14154]=1,
    [14338]=4,
    [14339]=4,
    [14340]=1,
    [14381]=4,
    [14395]=4,
    [14396]=4,
    [14472]=1,
    [14486]=1,
    [14487]=1,
    [14493]=1,
    [14502]=1,
    [14503]=1,
    [14522]=1,
    [14523]=4,
    [14525]=1,
    [14528]=1,
    [14531]=1,
    [14537]=1,
    [14538]=1,
    [14539]=1,
    [14540]=4,
    [14541]=1,
    [14542]=4,
    [14543]=1,
    [14544]=4,
    [14545]=1,
    [14546]=4,
    [14547]=4,
    [14548]=1,
    [14576]=1,
    [14577]=1,
    [14610]=4,
    [14611]=1,
    [14612]=1,
    [14613]=4,
    [14614]=1,
    [14615]=1,
    [14616]=1,
    [14617]=1,
    [14619]=4,
    [14620]=1,
    [14621]=1,
    [14622]=1,
    [14623]=1,
    [14624]=1,
    [14625]=4,
    [14626]=1,
    [14628]=4,
    [14629]=1,
    [14631]=1,
    [14632]=1,
    [14633]=1,
    [14636]=1,
    [14637]=1,
    [14638]=1,
    [14640]=1,
    [14641]=1,
    [14644]=4,
    [14645]=4,
    [14646]=4,
    [14647]=4,
    [14648]=4,
    [14649]=4,
    [14650]=4,
    [14651]=4,
    [14679]=4,
    [14872]=4,
    [14894]=1,
    [15002]=4,
    [15042]=4,
    [15043]=4,
    [15044]=4,
    [15102]=4,
    [15103]=4,
    [15104]=1,
    [15105]=1,
    [15106]=1,
    [15107]=1,
    [15108]=1,
    [15109]=1,
    [15196]=1,
    [15197]=1,
    [15198]=1,
    [15199]=1,
    [15200]=1,
    [15202]=1,
    [15203]=1,
    [15204]=1,
    [15205]=1,
    [15206]=1,
    [15207]=1,
    [15208]=4,
    [15209]=4,
    [15277]=1,
    [15290]=1,
    [15292]=1,
    [15293]=1,
    [15314]=4,
    [15328]=4,
    [15335]=1,
    [15396]=1,
    [15397]=1,
    [15398]=1,
    [15399]=1,
    [15400]=1,
    [15401]=1,
    [15402]=1,
    [15403]=1,
    [15404]=1,
    [15405]=1,
    [15406]=1,
    [15411]=1,
    [15413]=1,
    [15418]=1,
    [15421]=1,
    [15424]=1,
    [15443]=1,
    [15444]=1,
    [15445]=1,
    [15447]=4,
    [15448]=4,
    [15449]=1,
    [15450]=1,
    [15451]=1,
    [15452]=1,
    [15453]=1,
    [15454]=4,
    [15455]=1,
    [15456]=1,
    [15457]=1,
    [15458]=1,
    [15459]=1,
    [15461]=1,
    [15462]=1,
    [15463]=1,
    [15464]=1,
    [15465]=1,
    [15466]=1,
    [15467]=1,
    [15468]=1,
    [15469]=1,
    [15470]=1,
    [15471]=1,
    [15585]=1,
    [15587]=1,
    [15588]=1,
    [15689]=1,
    [15690]=1,
    [15691]=1,
    [15692]=1,
    [15695]=1,
    [15697]=1,
    [15698]=1,
    [15699]=1,
    [15702]=1,
    [15703]=1,
    [15704]=1,
    [15705]=1,
    [15706]=1,
    [15707]=1,
    [15708]=1,
    [15709]=1,
    [15710]=4,
    [15722]=4,
    [15723]=1,
    [15730]=1,
    [15736]=4,
    [15750]=4,
    [15766]=4,
    [15767]=4,
    [15778]=1,
    [15782]=1,
    [15783]=1,
    [15784]=1,
    [15785]=4,
    [15786]=1,
    [15787]=1,
    [15788]=4,
    [15789]=1,
    [15790]=4,
    [15791]=1,
    [15792]=1,
    [15795]=1,
    [15796]=1,
    [15797]=1,
    [15799]=1,
    [15800]=1,
    [15801]=1,
    [15803]=4,
    [15804]=1,
    [15805]=1,
    [15806]=1,
    [15812]=1,
    [15813]=1,
    [15814]=1,
    [15815]=1,
    [15822]=1,
    [15823]=1,
    [15824]=1,
    [15825]=1,
    [15826]=4,
    [15827]=1,
    [15842]=4,
    [15843]=4,
    [15844]=4,
    [15845]=4,
    [15847]=4,
    [15848]=4,
    [15849]=4,
    [15850]=4,
    [15851]=4,
    [15852]=4,
    [15853]=1,
    [15854]=1,
    [15855]=1,
    [15856]=1,
    [15857]=1,
    [15858]=1,
    [15859]=1,
    [15860]=1,
    [15861]=1,
    [15862]=1,
    [15863]=1,
    [15864]=1,
    [15865]=1,
    [15866]=1,
    [15867]=1,
    [15868]=4,
    [15873]=1,
    [15874]=4,
    [15875]=4,
    [15876]=4,
    [15877]=4,
    [15878]=4,
    [15879]=4,
    [15880]=4,
    [15881]=4,
    [15882]=4,
    [15883]=4,
    [15884]=4,
    [15885]=4,
    [15886]=1,
    [15902]=1,
    [15908]=4,
    [15911]=4,
    [15913]=4,
    [15914]=4,
    [15915]=4,
    [15916]=4,
    [15917]=4,
    [15919]=4,
    [15920]=4,
    [15921]=4,
    [15922]=4,
    [15923]=4,
    [15924]=4,
    [15998]=4,
    [16001]=4,
    [16002]=4,
    [16003]=4,
    [16057]=1,
    [16058]=1,
    [16114]=4,
    [16115]=4,
    [16189]=4,
    [16190]=4,
    [16192]=4,
    [16205]=4,
    [16207]=1,
    [16208]=4,
    [16209]=4,
    [16210]=4,
    [16217]=1,
    [16262]=4,
    [16263]=4,
    [16282]=4,
    [16283]=4,
    [16302]=1,
    [16303]=1,
    [16304]=1,
    [16305]=1,
    [16306]=4,
    [16307]=4,
    [16309]=1,
    [16310]=4,
    [16311]=4,
    [16312]=4,
    [16313]=4,
    [16314]=4,
    [16316]=1,
    [16317]=1,
    [16318]=1,
    [16319]=1,
    [16320]=1,
    [16321]=1,
    [16322]=1,
    [16323]=1,
    [16324]=1,
    [16325]=1,
    [16326]=1,
    [16327]=1,
    [16328]=1,
    [16329]=1,
    [16330]=1,
    [16331]=1,
    [16332]=4,
    [16333]=4,
    [16335]=1,
    [16341]=1,
    [16342]=1,
    [16345]=1,
    [16346]=1,
    [16347]=1,
    [16348]=1,
    [16349]=1,
    [16350]=1,
    [16351]=1,
    [16352]=1,
    [16353]=1,
    [16354]=1,
    [16355]=1,
    [16356]=1,
    [16357]=1,
    [16358]=1,
    [16359]=1,
    [16360]=1,
    [16361]=1,
    [16362]=1,
    [16363]=1,
    [16364]=1,
    [16365]=1,
    [16366]=1,
    [16368]=1,
    [16369]=1,
    [16371]=1,
    [16372]=1,
    [16373]=1,
    [16374]=1,
    [16375]=1,
    [16376]=1,
    [16377]=1,
    [16378]=1,
    [16379]=1,
    [16380]=1,
    [16381]=1,
    [16382]=1,
    [16383]=1,
    [16384]=1,
    [16385]=1,
    [16386]=1,
    [16387]=1,
    [16388]=1,
    [16389]=1,
    [16390]=1,
    [16391]=1,
    [16392]=1,
    [16393]=1,
    [16396]=1,
    [16397]=1,
    [16401]=1,
    [16403]=1,
    [16405]=1,
    [16406]=1,
    [16408]=1,
    [16409]=1,
    [16410]=1,
    [16413]=1,
    [16414]=1,
    [16415]=1,
    [16416]=1,
    [16417]=1,
    [16418]=1,
    [16419]=1,
    [16420]=1,
    [16421]=1,
    [16422]=1,
    [16423]=1,
    [16424]=1,
    [16425]=1,
    [16426]=1,
    [16427]=1,
    [16428]=1,
    [16429]=1,
    [16430]=1,
    [16431]=1,
    [16432]=1,
    [16433]=1,
    [16434]=1,
    [16435]=1,
    [16436]=1,
    [16437]=1,
    [16440]=1,
    [16441]=1,
    [16442]=1,
    [16443]=1,
    [16444]=1,
    [16446]=1,
    [16448]=1,
    [16449]=1,
    [16450]=1,
    [16451]=1,
    [16452]=1,
    [16453]=1,
    [16454]=1,
    [16455]=1,
    [16456]=1,
    [16457]=1,
    [16459]=1,
    [16462]=1,
    [16463]=1,
    [16465]=1,
    [16466]=1,
    [16467]=1,
    [16468]=1,
    [16471]=1,
    [16472]=1,
    [16473]=1,
    [16474]=1,
    [16475]=1,
    [16476]=1,
    [16477]=1,
    [16478]=1,
    [16479]=1,
    [16480]=1,
    [16483]=1,
    [16484]=1,
    [16485]=1,
    [16486]=1,
    [16487]=1,
    [16489]=1,
    [16490]=1,
    [16491]=1,
    [16492]=1,
    [16494]=1,
    [16496]=1,
    [16497]=1,
    [16498]=1,
    [16499]=1,
    [16501]=1,
    [16502]=1,
    [16503]=1,
    [16504]=1,
    [16505]=1,
    [16506]=1,
    [16507]=1,
    [16508]=1,
    [16509]=1,
    [16510]=1,
    [16513]=1,
    [16514]=1,
    [16515]=1,
    [16516]=1,
    [16518]=1,
    [16519]=1,
    [16521]=1,
    [16522]=1,
    [16523]=1,
    [16524]=1,
    [16525]=1,
    [16526]=1,
    [16527]=1,
    [16528]=1,
    [16530]=1,
    [16531]=1,
    [16532]=1,
    [16533]=1,
    [16534]=1,
    [16535]=1,
    [16536]=1,
    [16539]=1,
    [16540]=1,
    [16541]=1,
    [16542]=1,
    [16543]=1,
    [16544]=1,
    [16545]=1,
    [16548]=1,
    [16549]=1,
    [16550]=1,
    [16551]=1,
    [16552]=1,
    [16554]=1,
    [16555]=1,
    [16558]=1,
    [16560]=1,
    [16561]=1,
    [16562]=1,
    [16563]=1,
    [16564]=1,
    [16565]=1,
    [16566]=1,
    [16567]=1,
    [16568]=1,
    [16569]=1,
    [16571]=1,
    [16573]=1,
    [16574]=1,
    [16577]=1,
    [16578]=1,
    [16579]=1,
    [16580]=1,
    [16581]=4,
    [16602]=4,
    [16603]=4,
    [16604]=1,
    [16605]=1,
    [16606]=1,
    [16607]=1,
    [16608]=1,
    [16622]=1,
    [16623]=1,
    [16642]=1,
    [16643]=1,
    [16644]=1,
    [16658]=1,
    [16659]=1,
    [16660]=1,
    [16661]=1,
    [16662]=4,
    [16663]=4,
    [16665]=1,
    [16666]=1,
    [16667]=1,
    [16668]=1,
    [16669]=1,
    [16670]=1,
    [16674]=1,
    [16675]=1,
    [16677]=1,
    [16678]=1,
    [16679]=1,
    [16682]=1,
    [16686]=1,
    [16687]=1,
    [16688]=1,
    [16689]=1,
    [16690]=1,
    [16691]=1,
    [16693]=1,
    [16694]=1,
    [16695]=1,
    [16698]=1,
    [16699]=1,
    [16700]=1,
    [16701]=1,
    [16704]=1,
    [16706]=1,
    [16707]=1,
    [16708]=1,
    [16709]=1,
    [16711]=1,
    [16715]=1,
    [16718]=1,
    [16719]=1,
    [16720]=1,
    [16721]=1,
    [16725]=1,
    [16726]=1,
    [16727]=1,
    [16728]=1,
    [16729]=1,
    [16730]=1,
    [16731]=1,
    [16732]=1,
    [16733]=1,
    [16734]=1,
    [16738]=1,
    [16739]=1,
    [16740]=1,
    [16741]=1,
    [16742]=4,
    [16743]=4,
    [16744]=4,
    [16745]=4,
    [16746]=1,
    [16762]=4,
    [16763]=4,
    [16764]=4,
    [16765]=4,
    [16768]=1,
    [16769]=1,
    [16782]=1,
    [16783]=4,
    [16784]=4,
    [16785]=4,
    [16786]=4,
    [16787]=4,
    [16788]=1,
    [16789]=1,
    [16790]=1,
    [16791]=1,
    [16793]=1,
    [16794]=1,
    [16795]=1,
    [16796]=1,
    [16797]=1,
    [16798]=1,
    [16800]=1,
    [16801]=1,
    [16803]=1,
    [16805]=1,
    [16807]=1,
    [16808]=1,
    [16809]=1,
    [16810]=1,
    [16811]=1,
    [16812]=1,
    [16813]=1,
    [16814]=1,
    [16815]=1,
    [16816]=1,
    [16818]=1,
    [16820]=1,
    [16821]=1,
    [16822]=1,
    [16823]=1,
    [16824]=1,
    [16826]=1,
    [16829]=1,
    [16831]=1,
    [16832]=1,
    [16833]=1,
    [16834]=1,
    [16835]=1,
    [16836]=1,
    [16837]=1,
    [16839]=1,
    [16841]=1,
    [16842]=1,
    [16843]=1,
    [16844]=1,
    [16845]=1,
    [16846]=1,
    [16847]=1,
    [16848]=1,
    [16849]=1,
    [16852]=1,
    [16853]=1,
    [16854]=1,
    [16855]=1,
    [16856]=1,
    [16859]=1,
    [16860]=1,
    [16862]=1,
    [16863]=1,
    [16865]=1,
    [16866]=1,
    [16867]=1,
    [16868]=1,
    [16869]=4,
    [16870]=4,
    [16871]=4,
    [16872]=4,
    [16873]=1,
    [16886]=1,
    [16887]=1,
    [16888]=4,
    [16889]=1,
    [16890]=1,
    [16891]=1,
    [16892]=1,
    [16893]=1,
    [16894]=1,
    [16895]=1,
    [16896]=1,
    [16897]=1,
    [16898]=1,
    [16899]=1,
    [16900]=1,
    [16901]=1,
    [16902]=1,
    [16903]=1,
    [16904]=1,
    [16905]=1,
    [16906]=1,
    [16907]=1,
    [16908]=1,
    [16909]=1,
    [16910]=1,
    [16911]=1,
    [16912]=1,
    [16913]=1,
    [16914]=1,
    [16915]=1,
    [16916]=1,
    [16917]=1,
    [16918]=1,
    [16919]=1,
    [16920]=1,
    [16921]=1,
    [16922]=1,
    [16923]=1,
    [16924]=1,
    [16925]=1,
    [16926]=1,
    [16927]=1,
    [16928]=1,
    [16929]=1,
    [16930]=1,
    [16931]=1,
    [16932]=1,
    [16933]=1,
    [16934]=1,
    [16935]=1,
    [16936]=1,
    [16937]=1,
    [16938]=1,
    [16939]=1,
    [16940]=1,
    [16941]=1,
    [16942]=1,
    [16943]=1,
    [16944]=1,
    [16945]=1,
    [16946]=1,
    [16947]=1,
    [16948]=1,
    [16949]=1,
    [16950]=1,
    [16951]=1,
    [16952]=1,
    [16953]=1,
    [16954]=1,
    [16955]=1,
    [16956]=1,
    [16957]=1,
    [16958]=1,
    [16959]=1,
    [16960]=1,
    [16961]=1,
    [16962]=1,
    [16963]=1,
    [16964]=1,
    [16965]=1,
    [16966]=1,
    [16967]=4,
    [16968]=4,
    [16969]=4,
    [16970]=4,
    [16972]=4,
    [16973]=4,
    [16974]=4,
    [16975]=1,
    [16976]=4,
    [16977]=1,
    [16978]=1,
    [16981]=1,
    [16985]=1,
    [16986]=1,
    [16987]=1,
    [16990]=1,
    [16991]=4,
    [16992]=1,
    [16993]=1,
    [16994]=1,
    [16995]=1,
    [16996]=1,
    [16997]=1,
    [16998]=1,
    [17001]=1,
    [17002]=1,
    [17003]=1,
    [17004]=1,
    [17005]=1,
    [17006]=1,
    [17008]=1,
    [17009]=4,
    [17017]=1,
    [17018]=1,
    [17022]=1,
    [17023]=1,
    [17025]=1,
    [17039]=1,
    [17042]=1,
    [17043]=1,
    [17044]=1,
    [17045]=1,
    [17046]=1,
    [17047]=1,
    [17048]=1,
    [17049]=1,
    [17051]=1,
    [17052]=1,
    [17053]=1,
    [17059]=1,
    [17060]=1,
    [17063]=1,
    [17064]=1,
    [17065]=1,
    [17066]=1,
    [17067]=1,
    [17068]=1,
    [17069]=1,
    [17070]=1,
    [17071]=1,
    [17072]=1,
    [17073]=1,
    [17074]=1,
    [17075]=1,
    [17076]=1,
    [17077]=1,
    [17078]=1,
    [17082]=1,
    [17102]=1,
    [17103]=1,
    [17104]=1,
    [17105]=1,
    [17106]=1,
    [17107]=1,
    [17109]=1,
    [17110]=1,
    [17111]=1,
    [17112]=1,
    [17113]=1,
    [17114]=4,
    [17117]=4,
    [17118]=4,
    [17124]=1,
    [17125]=4,
    [17126]=4,
    [17182]=1,
    [17191]=1,
    [17204]=1,
    [17223]=1,
    [17224]=1,
    [17306]=1,
    [17309]=4,
    [17310]=4,
    [17322]=4,
    [17323]=4,
    [17324]=1,
    [17325]=4,
    [17326]=1,
    [17327]=1,
    [17328]=1,
    [17329]=4,
    [17330]=4,
    [17331]=4,
    [17332]=4,
    [17333]=1,
    [17345]=4,
    [17346]=4,
    [17348]=1,
    [17349]=1,
    [17351]=1,
    [17352]=1,
    [17353]=1,
    [17355]=4,
    [17362]=4,
    [17363]=4,
    [17364]=1,
    [17384]=1,
    [17410]=1,
    [17411]=4,
    [17422]=1,
    [17423]=1,
    [17442]=1,
    [17502]=1,
    [17503]=1,
    [17504]=1,
    [17505]=1,
    [17506]=1,
    [17507]=1,
    [17508]=1,
    [17522]=4,
    [17523]=1,
    [17542]=4,
    [17562]=1,
    [17564]=1,
    [17566]=1,
    [17567]=1,
    [17568]=1,
    [17569]=1,
    [17570]=1,
    [17571]=1,
    [17572]=1,
    [17573]=1,
    [17576]=1,
    [17577]=1,
    [17578]=1,
    [17579]=1,
    [17580]=1,
    [17581]=1,
    [17583]=1,
    [17584]=1,
    [17586]=1,
    [17588]=1,
    [17590]=1,
    [17591]=1,
    [17592]=1,
    [17593]=1,
    [17594]=1,
    [17596]=1,
    [17598]=1,
    [17599]=1,
    [17600]=1,
    [17601]=1,
    [17602]=1,
    [17603]=1,
    [17604]=1,
    [17605]=1,
    [17607]=1,
    [17608]=1,
    [17610]=1,
    [17611]=1,
    [17612]=1,
    [17613]=1,
    [17616]=1,
    [17617]=1,
    [17618]=1,
    [17620]=1,
    [17622]=1,
    [17623]=1,
    [17624]=1,
    [17625]=1,
    [17626]=1,
    [17642]=1,
    [17643]=1,
    [17662]=4,
    [17684]=4,
    [17685]=1,
    [17686]=1,
    [17687]=1,
    [17688]=1,
    [17689]=1,
    [17690]=1,
    [17691]=1,
    [17692]=1,
    [17693]=4,
    [17694]=1,
    [17695]=1,
    [17696]=4,
    [17702]=4,
    [17703]=4,
    [17705]=1,
    [17707]=1,
    [17710]=1,
    [17711]=1,
    [17712]=1,
    [17713]=1,
    [17714]=1,
    [17715]=1,
    [17717]=1,
    [17718]=1,
    [17719]=1,
    [17726]=1,
    [17727]=1,
    [17728]=1,
    [17730]=1,
    [17732]=1,
    [17733]=1,
    [17734]=1,
    [17735]=4,
    [17736]=1,
    [17737]=1,
    [17738]=1,
    [17739]=1,
    [17740]=1,
    [17741]=1,
    [17742]=1,
    [17743]=1,
    [17744]=1,
    [17745]=1,
    [17746]=1,
    [17748]=1,
    [17749]=1,
    [17750]=1,
    [17751]=1,
    [17752]=1,
    [17753]=1,
    [17754]=1,
    [17755]=1,
    [17756]=4,
    [17757]=4,
    [17758]=4,
    [17759]=1,
    [17760]=4,
    [17761]=1,
    [17762]=1,
    [17763]=1,
    [17764]=1,
    [17765]=1,
    [17766]=1,
    [17767]=1,
    [17768]=1,
    [17770]=1,
    [17772]=1,
    [17773]=1,
    [17774]=1,
    [17775]=1,
    [17776]=1,
    [17777]=1,
    [17778]=1,
    [17779]=1,
    [17780]=1,
    [17782]=1,
    [17822]=4,
    [17823]=4,
    [17849]=4,
    [17850]=4,
    [17900]=1,
    [17901]=1,
    [17902]=1,
    [17903]=1,
    [17904]=1,
    [17905]=1,
    [17906]=1,
    [17907]=1,
    [17908]=1,
    [17909]=1,
    [17943]=1,
    [17966]=1,
    [17982]=1,
    [18022]=1,
    [18043]=1,
    [18044]=1,
    [18047]=1,
    [18048]=1,
    [18082]=1,
    [18083]=1,
    [18102]=1,
    [18103]=1,
    [18104]=1,
    [18142]=1,
    [18143]=1,
    [18144]=1,
    [18145]=1,
    [18146]=1,
    [18147]=1,
    [18148]=4,
    [18149]=1,
    [18150]=1,
    [18151]=4,
    [18152]=4,
    [18160]=1,
    [18169]=1,
    [18170]=1,
    [18171]=1,
    [18172]=1,
    [18173]=1,
    [18182]=1,
    [18202]=1,
    [18203]=1,
    [18204]=1,
    [18205]=1,
    [18206]=1,
    [18207]=1,
    [18208]=1,
    [18240]=1,
    [18241]=1,
    [18242]=1,
    [18243]=1,
    [18244]=1,
    [18245]=1,
    [18246]=1,
    [18247]=1,
    [18248]=1,
    [18249]=1,
    [18250]=1,
    [18252]=1,
    [18259]=1,
    [18260]=1,
    [18261]=4,
    [18264]=1,
    [18266]=1,
    [18267]=1,
    [18268]=1,
    [18269]=1,
    [18284]=1,
    [18290]=1,
    [18291]=1,
    [18292]=1,
    [18297]=1,
    [18299]=4,
    [18301]=1,
    [18302]=1,
    [18305]=1,
    [18306]=1,
    [18307]=1,
    [18308]=1,
    [18309]=1,
    [18310]=1,
    [18311]=1,
    [18312]=1,
    [18313]=1,
    [18314]=1,
    [18315]=1,
    [18317]=1,
    [18318]=1,
    [18319]=1,
    [18321]=1,
    [18322]=1,
    [18323]=1,
    [18324]=1,
    [18325]=1,
    [18326]=1,
    [18327]=1,
    [18328]=1,
    [18329]=1,
    [18330]=1,
    [18331]=1,
    [18336]=4,
    [18345]=1,
    [18346]=1,
    [18347]=1,
    [18348]=1,
    [18349]=1,
    [18350]=1,
    [18351]=1,
    [18352]=1,
    [18353]=1,
    [18354]=1,
    [18366]=1,
    [18367]=1,
    [18368]=1,
    [18369]=1,
    [18370]=1,
    [18371]=1,
    [18372]=1,
    [18373]=1,
    [18374]=1,
    [18375]=1,
    [18376]=1,
    [18377]=1,
    [18378]=1,
    [18379]=1,
    [18380]=1,
    [18381]=1,
    [18382]=1,
    [18383]=1,
    [18384]=1,
    [18385]=1,
    [18386]=1,
    [18387]=1,
    [18388]=1,
    [18389]=1,
    [18390]=1,
    [18391]=1,
    [18392]=1,
    [18393]=1,
    [18394]=1,
    [18395]=1,
    [18396]=1,
    [18397]=1,
    [18398]=1,
    [18399]=1,
    [18400]=1,
    [18402]=1,
    [18403]=1,
    [18404]=1,
    [18406]=1,
    [18410]=1,
    [18411]=1,
    [18412]=4,
    [18415]=1,
    [18416]=1,
    [18417]=1,
    [18418]=1,
    [18420]=1,
    [18421]=1,
    [18422]=1,
    [18423]=1,
    [18424]=1,
    [18425]=1,
    [18426]=4,
    [18427]=1,
    [18428]=1,
    [18429]=1,
    [18430]=1,
    [18432]=1,
    [18434]=1,
    [18435]=1,
    [18436]=1,
    [18437]=1,
    [18440]=1,
    [18441]=1,
    [18442]=1,
    [18443]=1,
    [18444]=1,
    [18445]=1,
    [18447]=1,
    [18448]=1,
    [18449]=1,
    [18450]=1,
    [18451]=1,
    [18452]=1,
    [18453]=1,
    [18454]=1,
    [18455]=1,
    [18456]=1,
    [18457]=1,
    [18458]=1,
    [18459]=1,
    [18460]=1,
    [18461]=1,
    [18462]=1,
    [18463]=1,
    [18464]=1,
    [18465]=1,
    [18466]=1,
    [18467]=1,
    [18468]=1,
    [18469]=1,
    [18470]=1,
    [18471]=1,
    [18472]=1,
    [18473]=1,
    [18475]=1,
    [18476]=1,
    [18477]=1,
    [18478]=1,
    [18479]=1,
    [18480]=1,
    [18481]=1,
    [18482]=1,
    [18483]=1,
    [18484]=1,
    [18485]=1,
    [18488]=4,
    [18489]=1,
    [18490]=1,
    [18491]=1,
    [18492]=4,
    [18493]=1,
    [18494]=1,
    [18495]=1,
    [18496]=1,
    [18497]=1,
    [18498]=1,
    [18499]=1,
    [18500]=1,
    [18501]=1,
    [18502]=1,
    [18503]=1,
    [18505]=1,
    [18507]=1,
    [18513]=1,
    [18514]=1,
    [18515]=1,
    [18516]=1,
    [18520]=1,
    [18521]=1,
    [18522]=1,
    [18523]=1,
    [18524]=1,
    [18525]=1,
    [18526]=1,
    [18527]=1,
    [18528]=1,
    [18529]=1,
    [18530]=1,
    [18531]=1,
    [18532]=1,
    [18533]=1,
    [18534]=1,
    [18535]=1,
    [18536]=1,
    [18537]=1,
    [18538]=1,
    [18539]=4,
    [18540]=4,
    [18541]=1,
    [18542]=1,
    [18543]=1,
    [18544]=1,
    [18545]=1,
    [18546]=1,
    [18547]=1,
    [18563]=1,
    [18564]=1,
    [18565]=1,
    [18566]=4,
    [18582]=1,
    [18583]=1,
    [18584]=1,
    [18585]=1,
    [18586]=1,
    [18590]=4,
    [18591]=4,
    [18597]=1,
    [18598]=1,
    [18601]=4,
    [18602]=1,
    [18603]=4,
    [18604]=4,
    [18605]=4,
    [18606]=1,
    [18607]=1,
    [18608]=1,
    [18609]=1,
    [18622]=4,
    [18623]=4,
    [18624]=4,
    [18625]=4,
    [18626]=4,
    [18628]=1,
    [18629]=1,
    [18642]=4,
    [18643]=4,
    [18646]=1,
    [18659]=1,
    [18663]=1,
    [18670]=1,
    [18680]=1,
    [18681]=1,
    [18682]=1,
    [18683]=1,
    [18684]=1,
    [18686]=1,
    [18687]=4,
    [18689]=1,
    [18690]=1,
    [18691]=1,
    [18692]=1,
    [18693]=1,
    [18694]=1,
    [18695]=1,
    [18696]=1,
    [18703]=1,
    [18705]=1,
    [18706]=1,
    [18707]=1,
    [18708]=1,
    [18713]=1,
    [18714]=1,
    [18715]=1,
    [18716]=1,
    [18717]=1,
    [18718]=1,
    [18719]=4,
    [18720]=1,
    [18721]=1,
    [18722]=1,
    [18723]=1,
    [18724]=1,
    [18725]=1,
    [18726]=1,
    [18727]=1,
    [18728]=1,
    [18729]=1,
    [18730]=1,
    [18734]=1,
    [18735]=1,
    [18737]=1,
    [18738]=1,
    [18739]=1,
    [18740]=1,
    [18746]=4,
    [18749]=4,
    [18752]=4,
    [18753]=4,
    [18754]=1,
    [18755]=1,
    [18756]=1,
    [18757]=1,
    [18758]=1,
    [18759]=1,
    [18760]=1,
    [18761]=1,
    [18762]=1,
    [18766]=1,
    [18767]=1,
    [18768]=1,
    [18772]=1,
    [18773]=1,
    [18774]=1,
    [18775]=4,
    [18776]=1,
    [18777]=1,
    [18778]=1,
    [18785]=1,
    [18786]=1,
    [18787]=1,
    [18788]=1,
    [18789]=1,
    [18790]=1,
    [18791]=1,
    [18792]=4,
    [18793]=1,
    [18794]=1,
    [18795]=1,
    [18796]=1,
    [18797]=1,
    [18798]=1,
    [18799]=1,
    [18802]=1,
    [18803]=1,
    [18804]=4,
    [18805]=1,
    [18806]=1,
    [18807]=1,
    [18808]=1,
    [18809]=1,
    [18810]=1,
    [18811]=1,
    [18812]=1,
    [18813]=1,
    [18814]=1,
    [18815]=1,
    [18816]=1,
    [18817]=1,
    [18818]=1,
    [18819]=4,
    [18820]=1,
    [18821]=1,
    [18822]=1,
    [18823]=1,
    [18824]=1,
    [18825]=1,
    [18826]=1,
    [18827]=1,
    [18828]=1,
    [18829]=1,
    [18830]=1,
    [18831]=1,
    [18832]=1,
    [18833]=1,
    [18834]=1,
    [18835]=1,
    [18836]=1,
    [18837]=1,
    [18838]=1,
    [18839]=1,
    [18840]=1,
    [18841]=1,
    [18842]=1,
    [18843]=1,
    [18844]=1,
    [18845]=1,
    [18846]=1,
    [18847]=1,
    [18848]=1,
    [18849]=1,
    [18850]=1,
    [18851]=1,
    [18852]=1,
    [18853]=1,
    [18854]=1,
    [18855]=1,
    [18856]=1,
    [18857]=1,
    [18858]=1,
    [18859]=1,
    [18860]=1,
    [18861]=1,
    [18862]=1,
    [18863]=1,
    [18864]=1,
    [18865]=1,
    [18866]=1,
    [18867]=1,
    [18868]=1,
    [18869]=1,
    [18870]=1,
    [18871]=1,
    [18872]=1,
    [18873]=1,
    [18874]=1,
    [18875]=1,
    [18876]=1,
    [18877]=1,
    [18878]=1,
    [18879]=1,
    [18880]=4,
    [18902]=1,
    [18904]=4,
    [18922]=4,
    [18943]=4,
    [18946]=4,
    [18947]=4,
    [18950]=1,
    [18951]=1,
    [18952]=4,
    [18953]=4,
    [18954]=4,
    [18955]=4,
    [18956]=4,
    [18957]=1,
    [18958]=4,
    [18959]=4,
    [18960]=4,
    [18961]=4,
    [18962]=4,
    [18969]=1,
    [18970]=1,
    [18972]=1,
    [18987]=1,
    [19002]=1,
    [19003]=1,
    [19016]=1,
    [19017]=4,
    [19018]=1,
    [19019]=1,
    [19020]=4,
    [19022]=1,
    [19023]=4,
    [19024]=1,
    [19025]=4,
    [19027]=1,
    [19029]=1,
    [19030]=1,
    [19031]=1,
    [19032]=1,
    [19033]=4,
    [19034]=4,
    [19035]=1,
    [19036]=4,
    [19037]=1,
    [19038]=1,
    [19039]=1,
    [19040]=1,
    [19041]=1,
    [19042]=1,
    [19045]=1,
    [19046]=1,
    [19054]=1,
    [19055]=1,
    [19060]=1,
    [19061]=1,
    [19062]=1,
    [19064]=4,
    [19066]=1,
    [19067]=1,
    [19068]=1,
    [19069]=4,
    [19070]=4,
    [19071]=4,
    [19083]=1,
    [19084]=1,
    [19085]=1,
    [19086]=1,
    [19087]=1,
    [19088]=1,
    [19089]=1,
    [19090]=1,
    [19091]=1,
    [19092]=1,
    [19093]=1,
    [19094]=1,
    [19095]=1,
    [19096]=1,
    [19097]=1,
    [19098]=1,
    [19099]=1,
    [19100]=1,
    [19101]=1,
    [19102]=1,
    [19103]=1,
    [19104]=1,
    [19105]=1,
    [19106]=1,
    [19107]=1,
    [19108]=1,
    [19109]=1,
    [19110]=1,
    [19111]=1,
    [19112]=1,
    [19113]=1,
    [19114]=1,
    [19115]=1,
    [19116]=1,
    [19117]=1,
    [19118]=1,
    [19119]=1,
    [19120]=1,
    [19121]=1,
    [19123]=1,
    [19124]=1,
    [19125]=1,
    [19126]=1,
    [19127]=1,
    [19128]=1,
    [19130]=1,
    [19131]=1,
    [19132]=1,
    [19133]=1,
    [19134]=1,
    [19135]=1,
    [19136]=1,
    [19137]=1,
    [19138]=1,
    [19139]=1,
    [19140]=1,
    [19141]=1,
    [19142]=1,
    [19143]=1,
    [19144]=1,
    [19145]=1,
    [19146]=1,
    [19147]=1,
    [19150]=1,
    [19151]=1,
    [19152]=1,
    [19153]=1,
    [19154]=1,
    [19155]=1,
    [19159]=1,
    [19160]=1,
    [19182]=1,
    [19202]=1,
    [19203]=1,
    [19204]=1,
    [19205]=1,
    [19206]=1,
    [19207]=1,
    [19208]=1,
    [19209]=1,
    [19210]=1,
    [19211]=1,
    [19212]=1,
    [19213]=1,
    [19215]=1,
    [19216]=1,
    [19217]=1,
    [19218]=1,
    [19219]=1,
    [19220]=1,
    [19229]=1,
    [19237]=1,
    [19238]=1,
    [19239]=1,
    [19240]=1,
    [19241]=1,
    [19242]=1,
    [19243]=1,
    [19244]=1,
    [19245]=1,
    [19246]=1,
    [19247]=1,
    [19248]=1,
    [19249]=1,
    [19250]=1,
    [19251]=1,
    [19252]=1,
    [19253]=1,
    [19254]=1,
    [19255]=1,
    [19256]=1,
    [19266]=1,
    [19287]=1,
    [19288]=1,
    [19289]=1,
    [19290]=1,
    [19301]=1,
    [19302]=1,
    [19303]=1,
    [19307]=1,
    [19308]=1,
    [19309]=1,
    [19310]=1,
    [19311]=1,
    [19312]=1,
    [19315]=1,
    [19316]=1,
    [19317]=1,
    [19318]=1,
    [19319]=1,
    [19320]=1,
    [19321]=1,
    [19322]=1,
    [19323]=1,
    [19324]=1,
    [19325]=1,
    [19326]=1,
    [19327]=1,
    [19328]=1,
    [19329]=1,
    [19330]=1,
    [19331]=1,
    [19332]=1,
    [19333]=1,
    [19334]=1,
    [19335]=1,
    [19336]=1,
    [19337]=1,
    [19338]=4,
    [19339]=1,
    [19340]=1,
    [19341]=1,
    [19342]=1,
    [19343]=1,
    [19344]=1,
    [19345]=1,
    [19346]=1,
    [19347]=1,
    [19348]=1,
    [19349]=1,
    [19350]=1,
    [19351]=1,
    [19352]=1,
    [19353]=1,
    [19354]=1,
    [19355]=1,
    [19356]=1,
    [19357]=1,
    [19358]=1,
    [19360]=1,
    [19361]=1,
    [19362]=1,
    [19363]=1,
    [19364]=1,
    [19365]=1,
    [19366]=1,
    [19367]=1,
    [19368]=1,
    [19369]=1,
    [19370]=1,
    [19371]=1,
    [19372]=1,
    [19373]=1,
    [19374]=1,
    [19375]=1,
    [19376]=1,
    [19377]=1,
    [19378]=1,
    [19379]=1,
    [19380]=1,
    [19381]=1,
    [19382]=1,
    [19383]=1,
    [19384]=1,
    [19385]=1,
    [19386]=1,
    [19387]=1,
    [19388]=1,
    [19389]=1,
    [19390]=1,
    [19391]=1,
    [19392]=1,
    [19393]=1,
    [19394]=1,
    [19395]=1,
    [19396]=1,
    [19397]=1,
    [19398]=1,
    [19399]=1,
    [19400]=1,
    [19401]=1,
    [19402]=1,
    [19403]=1,
    [19405]=1,
    [19406]=1,
    [19407]=1,
    [19422]=1,
    [19423]=1,
    [19424]=1,
    [19425]=1,
    [19426]=1,
    [19430]=1,
    [19431]=1,
    [19432]=1,
    [19433]=1,
    [19434]=1,
    [19435]=1,
    [19436]=1,
    [19437]=1,
    [19438]=1,
    [19439]=1,
    [19442]=1,
    [19443]=1,
    [19444]=1,
    [19445]=1,
    [19446]=1,
    [19447]=1,
    [19448]=1,
    [19449]=1,
    [19450]=1,
    [19451]=1,
    [19452]=1,
    [19453]=1,
    [19454]=1,
    [19462]=1,
    [19491]=1,
    [19505]=1,
    [19506]=1,
    [19507]=1,
    [19508]=1,
    [19509]=1,
    [19510]=1,
    [19511]=1,
    [19512]=1,
    [19513]=1,
    [19514]=1,
    [19515]=1,
    [19516]=1,
    [19517]=1,
    [19518]=1,
    [19519]=1,
    [19520]=1,
    [19521]=1,
    [19522]=1,
    [19523]=1,
    [19524]=1,
    [19525]=1,
    [19526]=1,
    [19527]=1,
    [19528]=1,
    [19529]=1,
    [19530]=1,
    [19531]=1,
    [19532]=1,
    [19533]=1,
    [19534]=1,
    [19535]=1,
    [19536]=1,
    [19537]=1,
    [19538]=1,
    [19539]=1,
    [19540]=1,
    [19541]=1,
    [19542]=1,
    [19543]=1,
    [19544]=1,
    [19545]=1,
    [19546]=1,
    [19547]=1,
    [19548]=1,
    [19549]=1,
    [19550]=1,
    [19551]=1,
    [19552]=1,
    [19553]=1,
    [19554]=1,
    [19555]=1,
    [19556]=1,
    [19557]=1,
    [19558]=1,
    [19559]=1,
    [19560]=1,
    [19561]=1,
    [19562]=1,
    [19563]=1,
    [19564]=1,
    [19565]=1,
    [19566]=1,
    [19567]=1,
    [19568]=1,
    [19569]=1,
    [19570]=1,
    [19571]=1,
    [19572]=1,
    [19573]=1,
    [19574]=1,
    [19575]=1,
    [19576]=1,
    [19577]=1,
    [19578]=1,
    [19579]=1,
    [19580]=1,
    [19581]=1,
    [19582]=1,
    [19583]=1,
    [19584]=1,
    [19585]=1,
    [19586]=1,
    [19587]=1,
    [19588]=1,
    [19589]=1,
    [19590]=1,
    [19591]=1,
    [19592]=1,
    [19593]=1,
    [19594]=1,
    [19595]=1,
    [19596]=1,
    [19597]=1,
    [19598]=1,
    [19599]=1,
    [19600]=1,
    [19601]=1,
    [19602]=1,
    [19603]=1,
    [19604]=1,
    [19605]=1,
    [19606]=1,
    [19607]=1,
    [19608]=1,
    [19609]=1,
    [19610]=1,
    [19611]=1,
    [19612]=1,
    [19613]=1,
    [19614]=1,
    [19615]=1,
    [19616]=1,
    [19617]=1,
    [19618]=1,
    [19619]=1,
    [19620]=1,
    [19621]=1,
    [19696]=1,
    [19697]=1,
    [19716]=1,
    [19717]=1,
    [19718]=1,
    [19719]=1,
    [19720]=1,
    [19721]=1,
    [19722]=1,
    [19723]=1,
    [19724]=1,
    [19725]=4,
    [19727]=1,
    [19760]=1,
    [19764]=1,
    [19765]=1,
    [19766]=1,
    [19769]=1,
    [19770]=1,
    [19771]=1,
    [19772]=1,
    [19773]=1,
    [19775]=4,
    [19776]=1,
    [19777]=1,
    [19778]=1,
    [19779]=1,
    [19780]=1,
    [19781]=1,
    [19782]=1,
    [19783]=1,
    [19784]=1,
    [19785]=1,
    [19786]=1,
    [19787]=1,
    [19788]=1,
    [19789]=1,
    [19790]=1,
    [19802]=1,
    [19803]=1,
    [19805]=1,
    [19806]=1,
    [19807]=1,
    [19812]=1,
    [19822]=1,
    [19823]=1,
    [19824]=1,
    [19825]=1,
    [19826]=1,
    [19827]=1,
    [19828]=1,
    [19829]=1,
    [19830]=1,
    [19831]=1,
    [19832]=1,
    [19833]=1,
    [19834]=1,
    [19835]=1,
    [19836]=1,
    [19838]=1,
    [19839]=1,
    [19840]=1,
    [19841]=1,
    [19842]=1,
    [19843]=1,
    [19845]=1,
    [19846]=1,
    [19848]=1,
    [19849]=1,
    [19850]=4,
    [19851]=4,
    [19852]=1,
    [19853]=1,
    [19854]=1,
    [19855]=1,
    [19856]=1,
    [19857]=1,
    [19858]=1,
    [19859]=1,
    [19861]=1,
    [19862]=1,
    [19863]=1,
    [19864]=1,
    [19865]=1,
    [19866]=1,
    [19867]=1,
    [19869]=1,
    [19870]=1,
    [19871]=1,
    [19872]=1,
    [19873]=1,
    [19874]=1,
    [19875]=1,
    [19876]=1,
    [19877]=1,
    [19878]=1,
    [19879]=1,
    [19880]=4,
    [19881]=4,
    [19882]=4,
    [19883]=4,
    [19884]=1,
    [19885]=1,
    [19886]=1,
    [19887]=1,
    [19888]=1,
    [19889]=1,
    [19890]=1,
    [19891]=1,
    [19892]=1,
    [19893]=1,
    [19894]=1,
    [19895]=1,
    [19896]=1,
    [19897]=1,
    [19898]=1,
    [19899]=1,
    [19900]=1,
    [19901]=1,
    [19902]=1,
    [19903]=1,
    [19904]=1,
    [19905]=1,
    [19906]=1,
    [19907]=1,
    [19908]=1,
    [19909]=1,
    [19910]=1,
    [19911]=4,
    [19912]=1,
    [19913]=1,
    [19914]=1,
    [19915]=1,
    [19918]=1,
    [19919]=1,
    [19920]=1,
    [19922]=1,
    [19923]=1,
    [19925]=1,
    [19927]=1,
    [19928]=1,
    [19929]=1,
    [19930]=1,
    [19939]=1,
    [19940]=1,
    [19941]=1,
    [19942]=1,
    [19944]=1,
    [19945]=1,
    [19946]=1,
    [19947]=1,
    [19948]=1,
    [19949]=1,
    [19950]=1,
    [19951]=1,
    [19952]=1,
    [19953]=1,
    [19954]=1,
    [19955]=1,
    [19956]=1,
    [19957]=1,
    [19958]=1,
    [19959]=1,
    [19961]=1,
    [19962]=1,
    [19963]=1,
    [19964]=1,
    [19965]=1,
    [19967]=1,
    [19968]=1,
    [19969]=1,
    [19970]=1,
    [19971]=1,
    [19972]=1,
    [19973]=4,
    [19979]=1,
    [19982]=1,
    [19984]=1,
    [19990]=1,
    [19991]=1,
    [19992]=1,
    [19993]=1,
    [19994]=1,
    [19995]=1,
    [19996]=1,
    [19997]=1,
    [20000]=1,
    [20001]=1,
    [20006]=1,
    [20011]=1,
    [20012]=1,
    [20013]=1,
    [20014]=1,
    [20017]=4,
    [20018]=4,
    [20019]=4,
    [20021]=4,
    [20022]=4,
    [20023]=4,
    [20025]=4,
    [20027]=4,
    [20028]=4,
    [20029]=4,
    [20031]=1,
    [20032]=1,
    [20033]=1,
    [20034]=1,
    [20035]=1,
    [20036]=1,
    [20037]=1,
    [20038]=1,
    [20040]=1,
    [20041]=1,
    [20042]=1,
    [20043]=1,
    [20044]=1,
    [20045]=1,
    [20046]=1,
    [20047]=1,
    [20048]=1,
    [20049]=1,
    [20050]=1,
    [20051]=1,
    [20052]=1,
    [20053]=1,
    [20054]=1,
    [20055]=1,
    [20056]=1,
    [20057]=1,
    [20058]=1,
    [20059]=1,
    [20060]=1,
    [20061]=1,
    [20062]=1,
    [20063]=1,
    [20064]=1,
    [20065]=1,
    [20066]=1,
    [20067]=1,
    [20068]=1,
    [20069]=1,
    [20070]=1,
    [20071]=1,
    [20072]=1,
    [20073]=1,
    [20076]=1,
    [20077]=1,
    [20078]=1,
    [20079]=1,
    [20080]=1,
    [20081]=1,
    [20082]=1,
    [20083]=1,
    [20085]=4,
    [20086]=1,
    [20087]=4,
    [20088]=1,
    [20089]=1,
    [20090]=1,
    [20091]=1,
    [20092]=1,
    [20093]=1,
    [20094]=1,
    [20095]=1,
    [20096]=1,
    [20097]=1,
    [20098]=1,
    [20099]=1,
    [20100]=1,
    [20101]=1,
    [20102]=1,
    [20103]=1,
    [20104]=1,
    [20105]=1,
    [20106]=1,
    [20107]=1,
    [20108]=1,
    [20109]=1,
    [20110]=1,
    [20111]=1,
    [20112]=1,
    [20113]=1,
    [20114]=1,
    [20115]=1,
    [20116]=1,
    [20117]=1,
    [20124]=1,
    [20125]=1,
    [20126]=1,
    [20127]=1,
    [20128]=1,
    [20129]=1,
    [20130]=1,
    [20131]=1,
    [20132]=1,
    [20134]=1,
    [20150]=1,
    [20151]=1,
    [20152]=1,
    [20153]=1,
    [20154]=1,
    [20155]=1,
    [20156]=1,
    [20157]=1,
    [20158]=1,
    [20159]=1,
    [20160]=1,
    [20161]=1,
    [20162]=1,
    [20163]=1,
    [20164]=1,
    [20165]=1,
    [20166]=1,
    [20167]=1,
    [20168]=1,
    [20169]=1,
    [20170]=1,
    [20171]=1,
    [20172]=1,
    [20173]=1,
    [20174]=1,
    [20175]=1,
    [20176]=1,
    [20177]=1,
    [20181]=1,
    [20184]=1,
    [20186]=1,
    [20187]=1,
    [20188]=1,
    [20189]=1,
    [20190]=1,
    [20191]=1,
    [20192]=1,
    [20193]=1,
    [20194]=1,
    [20195]=1,
    [20196]=1,
    [20197]=1,
    [20198]=1,
    [20199]=1,
    [20200]=1,
    [20201]=1,
    [20202]=1,
    [20203]=1,
    [20204]=1,
    [20205]=1,
    [20206]=1,
    [20207]=1,
    [20208]=1,
    [20209]=1,
    [20210]=1,
    [20211]=1,
    [20212]=1,
    [20213]=1,
    [20214]=1,
    [20215]=1,
    [20216]=1,
    [20217]=1,
    [20218]=1,
    [20219]=1,
    [20220]=1,
    [20222]=1,
    [20223]=1,
    [20224]=1,
    [20225]=1,
    [20226]=1,
    [20227]=1,
    [20228]=1,
    [20229]=1,
    [20230]=1,
    [20231]=1,
    [20232]=1,
    [20233]=1,
    [20234]=1,
    [20235]=1,
    [20236]=1,
    [20237]=1,
    [20243]=1,
    [20244]=1,
    [20253]=1,
    [20254]=1,
    [20255]=1,
    [20256]=1,
    [20257]=1,
    [20260]=1,
    [20262]=1,
    [20264]=1,
    [20265]=1,
    [20266]=1,
    [20310]=1,
    [20369]=1,
    [20371]=1,
    [20373]=4,
    [20374]=4,
    [20375]=4,
    [20376]=4,
    [20377]=4,
    [20378]=4,
    [20379]=4,
    [20382]=1,
    [20383]=4,
    [20385]=4,
    [20387]=4,
    [20388]=1,
    [20389]=1,
    [20390]=1,
    [20391]=1,
    [20392]=1,
    [20393]=1,
    [20397]=1,
    [20398]=1,
    [20399]=1,
    [20400]=1,
    [20401]=4,
    [20402]=1,
    [20403]=1,
    [20409]=1,
    [20410]=1,
    [20411]=1,
    [20413]=1,
    [20414]=1,
    [20415]=1,
    [20425]=1,
    [20426]=1,
    [20427]=1,
    [20428]=1,
    [20429]=1,
    [20430]=1,
    [20431]=1,
    [20434]=1,
    [20437]=1,
    [20438]=1,
    [20439]=1,
    [20440]=1,
    [20441]=1,
    [20442]=1,
    [20443]=1,
    [20444]=1,
    [20453]=1,
    [20454]=4,
    [20455]=4,
    [20456]=4,
    [20457]=4,
    [20458]=4,
    [20459]=4,
    [20461]=1,
    [20463]=1,
    [20464]=1,
    [20465]=4,
    [20466]=4,
    [20467]=4,
    [20469]=1,
    [20470]=4,
    [20471]=4,
    [20472]=4,
    [20474]=1,
    [20482]=4,
    [20483]=1,
    [20487]=1,
    [20488]=1,
    [20490]=4,
    [20491]=4,
    [20492]=4,
    [20493]=4,
    [20494]=4,
    [20495]=4,
    [20496]=4,
    [20497]=4,
    [20503]=1,
    [20504]=1,
    [20505]=1,
    [20506]=1,
    [20507]=1,
    [20508]=1,
    [20509]=1,
    [20510]=1,
    [20511]=1,
    [20512]=1,
    [20516]=1,
    [20517]=1,
    [20519]=4,
    [20521]=1,
    [20530]=1,
    [20534]=1,
    [20536]=1,
    [20556]=1,
    [20557]=1,
    [20558]=1,
    [20559]=1,
    [20560]=1,
    [20561]=1,
    [20562]=1,
    [20563]=1,
    [20564]=1,
    [20565]=1,
    [20566]=1,
    [20567]=1,
    [20568]=1,
    [20569]=1,
    [20570]=1,
    [20571]=1,
    [20572]=1,
    [20573]=1,
    [20574]=1,
    [20577]=1,
    [20578]=1,
    [20579]=1,
    [20580]=1,
    [20581]=1,
    [20582]=1,
    [20599]=1,
    [20600]=1,
    [20601]=1,
    [20602]=1,
    [20603]=1,
    [20604]=4,
    [20605]=4,
    [20606]=4,
    [20607]=4,
    [20608]=4,
    [20610]=4,
    [20611]=4,
    [20612]=4,
    [20613]=4,
    [20614]=4,
    [20615]=1,
    [20616]=1,
    [20617]=1,
    [20618]=1,
    [20619]=1,
    [20620]=1,
    [20621]=1,
    [20622]=1,
    [20623]=1,
    [20624]=1,
    [20625]=1,
    [20626]=1,
    [20627]=1,
    [20628]=1,
    [20629]=1,
    [20630]=1,
    [20631]=1,
    [20632]=1,
    [20633]=1,
    [20634]=1,
    [20635]=1,
    [20636]=1,
    [20637]=1,
    [20638]=1,
    [20639]=1,
    [20640]=1,
    [20641]=1,
    [20642]=1,
    [20643]=1,
    [20644]=1,
    [20645]=1,
    [20646]=1,
    [20647]=1,
    [20648]=1,
    [20649]=1,
    [20650]=1,
    [20654]=1,
    [20657]=1,
    [20660]=1,
    [20663]=1,
    [20666]=1,
    [20669]=1,
    [20672]=1,
    [20675]=1,
    [20680]=1,
    [20681]=1,
    [20682]=1,
    [20683]=1,
    [20684]=1,
    [20685]=1,
    [20686]=1,
    [20687]=1,
    [20688]=1,
    [20689]=1,
    [20690]=1,
    [20691]=1,
    [20699]=1,
    [20700]=1,
    [20701]=1,
    [20702]=1,
    [20703]=1,
    [20704]=1,
    [20705]=1,
    [20706]=1,
    [20707]=1,
    [20710]=1,
    [20711]=1,
    [20712]=1,
    [20713]=1,
    [20714]=1,
    [20715]=1,
    [20716]=1,
    [20717]=1,
    [20723]=1,
    [20724]=1,
    [20726]=1,
    [20727]=1,
    [20728]=1,
    [20729]=1,
    [20730]=1,
    [20731]=1,
    [20732]=1,
    [20733]=1,
    [20734]=1,
    [20735]=1,
    [20736]=1,
    [20741]=1,
    [20742]=1,
    [20756]=1,
    [20757]=1,
    [20761]=1,
    [20800]=1,
    [20801]=1,
    [20802]=1,
    [20803]=4,
    [20805]=1,
    [20806]=1,
    [20807]=1,
    [20808]=1,
    [20809]=1,
    [20810]=1,
    [20884]=1,
    [20885]=1,
    [20886]=1,
    [20888]=1,
    [20889]=1,
    [20890]=1,
    [20926]=1,
    [20927]=1,
    [20928]=1,
    [20929]=1,
    [20930]=1,
    [20931]=1,
    [20932]=1,
    [20933]=1,
    [20939]=1,
    [20940]=1,
    [20941]=1,
    [20942]=1,
    [20943]=1,
    [20944]=1,
    [20945]=1,
    [20947]=1,
    [20948]=1,
    [20949]=1,
    [20951]=4,
    [21027]=4,
    [21028]=4,
    [21029]=4,
    [21032]=4,
    [21037]=1,
    [21039]=1,
    [21040]=1,
    [21041]=1,
    [21042]=1,
    [21100]=1,
    [21103]=1,
    [21104]=1,
    [21105]=1,
    [21106]=1,
    [21107]=1,
    [21108]=1,
    [21109]=1,
    [21110]=1,
    [21111]=1,
    [21112]=1,
    [21115]=1,
    [21116]=1,
    [21117]=1,
    [21118]=1,
    [21119]=1,
    [21120]=1,
    [21126]=1,
    [21128]=1,
    [21130]=1,
    [21131]=1,
    [21132]=1,
    [21133]=1,
    [21134]=1,
    [21136]=4,
    [21137]=4,
    [21138]=4,
    [21139]=4,
    [21143]=1,
    [21144]=4,
    [21145]=4,
    [21146]=4,
    [21147]=4,
    [21148]=4,
    [21149]=4,
    [21155]=4,
    [21156]=1,
    [21157]=1,
    [21158]=1,
    [21160]=1,
    [21161]=1,
    [21165]=1,
    [21166]=1,
    [21167]=1,
    [21175]=1,
    [21176]=1,
    [21178]=1,
    [21179]=1,
    [21180]=1,
    [21181]=1,
    [21182]=1,
    [21183]=1,
    [21184]=1,
    [21185]=1,
    [21186]=1,
    [21187]=1,
    [21188]=1,
    [21189]=1,
    [21190]=1,
    [21191]=1,
    [21196]=1,
    [21197]=1,
    [21198]=1,
    [21199]=1,
    [21200]=1,
    [21201]=1,
    [21202]=1,
    [21203]=1,
    [21204]=1,
    [21205]=1,
    [21206]=1,
    [21207]=1,
    [21208]=1,
    [21209]=1,
    [21210]=1,
    [21211]=4,
    [21212]=1,
    [21215]=1,
    [21216]=1,
    [21218]=1,
    [21220]=1,
    [21221]=1,
    [21229]=1,
    [21230]=1,
    [21232]=1,
    [21235]=1,
    [21237]=1,
    [21241]=1,
    [21242]=1,
    [21244]=1,
    [21245]=1,
    [21248]=1,
    [21249]=1,
    [21250]=1,
    [21251]=1,
    [21252]=1,
    [21253]=1,
    [21254]=1,
    [21255]=1,
    [21256]=1,
    [21257]=1,
    [21258]=1,
    [21259]=1,
    [21260]=1,
    [21261]=1,
    [21262]=1,
    [21263]=1,
    [21264]=1,
    [21265]=1,
    [21266]=1,
    [21268]=1,
    [21269]=1,
    [21270]=1,
    [21271]=1,
    [21272]=1,
    [21273]=1,
    [21275]=1,
    [21310]=1,
    [21311]=1,
    [21312]=1,
    [21314]=1,
    [21315]=1,
    [21316]=1,
    [21317]=1,
    [21318]=1,
    [21319]=1,
    [21320]=1,
    [21321]=1,
    [21322]=1,
    [21323]=1,
    [21324]=1,
    [21325]=1,
    [21326]=1,
    [21327]=1,
    [21328]=1,
    [21329]=1,
    [21330]=1,
    [21331]=1,
    [21332]=1,
    [21333]=1,
    [21334]=1,
    [21335]=1,
    [21336]=1,
    [21337]=1,
    [21338]=1,
    [21343]=1,
    [21344]=1,
    [21345]=1,
    [21346]=1,
    [21347]=1,
    [21348]=1,
    [21349]=1,
    [21350]=1,
    [21351]=1,
    [21352]=1,
    [21353]=1,
    [21354]=1,
    [21355]=1,
    [21356]=1,
    [21357]=1,
    [21359]=1,
    [21360]=1,
    [21361]=1,
    [21362]=1,
    [21363]=1,
    [21364]=1,
    [21365]=1,
    [21366]=1,
    [21367]=1,
    [21368]=1,
    [21370]=1,
    [21372]=1,
    [21373]=1,
    [21374]=1,
    [21375]=1,
    [21376]=1,
    [21377]=1,
    [21378]=1,
    [21379]=1,
    [21380]=1,
    [21381]=1,
    [21382]=1,
    [21383]=1,
    [21384]=1,
    [21385]=1,
    [21386]=1,
    [21387]=1,
    [21388]=1,
    [21389]=1,
    [21390]=1,
    [21391]=1,
    [21392]=1,
    [21393]=1,
    [21394]=1,
    [21395]=1,
    [21396]=1,
    [21397]=1,
    [21398]=1,
    [21399]=1,
    [21400]=1,
    [21401]=1,
    [21402]=1,
    [21403]=1,
    [21404]=1,
    [21405]=1,
    [21406]=1,
    [21407]=1,
    [21408]=1,
    [21409]=1,
    [21410]=1,
    [21411]=1,
    [21412]=1,
    [21413]=1,
    [21414]=1,
    [21415]=1,
    [21416]=1,
    [21417]=1,
    [21418]=1,
    [21436]=1,
    [21438]=1,
    [21452]=1,
    [21453]=1,
    [21454]=1,
    [21455]=1,
    [21456]=1,
    [21457]=1,
    [21458]=1,
    [21459]=1,
    [21460]=1,
    [21461]=1,
    [21462]=1,
    [21463]=1,
    [21464]=1,
    [21466]=1,
    [21467]=1,
    [21468]=1,
    [21469]=1,
    [21470]=1,
    [21471]=1,
    [21472]=1,
    [21473]=1,
    [21474]=1,
    [21475]=1,
    [21476]=1,
    [21477]=1,
    [21478]=1,
    [21479]=1,
    [21480]=1,
    [21481]=1,
    [21482]=1,
    [21483]=1,
    [21484]=1,
    [21485]=1,
    [21486]=1,
    [21487]=1,
    [21488]=1,
    [21489]=1,
    [21490]=1,
    [21491]=1,
    [21492]=1,
    [21493]=1,
    [21494]=1,
    [21495]=1,
    [21496]=1,
    [21497]=1,
    [21498]=1,
    [21499]=1,
    [21500]=1,
    [21501]=1,
    [21502]=1,
    [21503]=1,
    [21504]=1,
    [21505]=1,
    [21506]=1,
    [21507]=1,
    [21508]=1,
    [21509]=1,
    [21510]=1,
    [21511]=1,
    [21512]=1,
    [21513]=1,
    [21514]=1,
    [21515]=1,
    [21517]=1,
    [21519]=1,
    [21520]=1,
    [21521]=1,
    [21522]=1,
    [21523]=1,
    [21524]=1,
    [21525]=1,
    [21526]=1,
    [21527]=1,
    [21528]=1,
    [21529]=1,
    [21530]=1,
    [21531]=1,
    [21532]=1,
    [21533]=4,
    [21534]=4,
    [21535]=4,
    [21537]=1,
    [21538]=1,
    [21539]=1,
    [21540]=1,
    [21541]=1,
    [21543]=1,
    [21544]=1,
    [21545]=4,
    [21563]=1,
    [21565]=1,
    [21566]=1,
    [21567]=1,
    [21568]=1,
    [21579]=1,
    [21581]=1,
    [21582]=1,
    [21583]=1,
    [21585]=1,
    [21586]=1,
    [21587]=1,
    [21596]=1,
    [21597]=1,
    [21598]=1,
    [21599]=1,
    [21600]=1,
    [21601]=1,
    [21602]=1,
    [21603]=1,
    [21604]=1,
    [21605]=1,
    [21606]=1,
    [21607]=1,
    [21608]=1,
    [21609]=1,
    [21610]=1,
    [21611]=1,
    [21615]=1,
    [21616]=1,
    [21617]=1,
    [21618]=1,
    [21619]=1,
    [21620]=1,
    [21621]=1,
    [21622]=1,
    [21623]=1,
    [21624]=1,
    [21625]=1,
    [21626]=1,
    [21627]=1,
    [21635]=1,
    [21639]=1,
    [21640]=1,
    [21645]=1,
    [21647]=1,
    [21648]=1,
    [21650]=1,
    [21651]=1,
    [21652]=1,
    [21663]=1,
    [21664]=1,
    [21665]=1,
    [21666]=1,
    [21667]=1,
    [21668]=1,
    [21669]=1,
    [21670]=1,
    [21671]=1,
    [21672]=1,
    [21673]=1,
    [21674]=1,
    [21675]=1,
    [21676]=1,
    [21677]=1,
    [21678]=1,
    [21679]=1,
    [21680]=1,
    [21681]=1,
    [21682]=1,
    [21683]=1,
    [21684]=1,
    [21685]=1,
    [21686]=1,
    [21687]=1,
    [21688]=1,
    [21689]=1,
    [21690]=1,
    [21691]=1,
    [21692]=1,
    [21693]=1,
    [21694]=1,
    [21695]=1,
    [21696]=1,
    [21697]=1,
    [21698]=1,
    [21699]=1,
    [21700]=1,
    [21701]=1,
    [21702]=1,
    [21703]=1,
    [21704]=1,
    [21705]=1,
    [21706]=1,
    [21707]=1,
    [21708]=1,
    [21709]=1,
    [21710]=1,
    [21711]=1,
    [21712]=1,
    [21715]=1,
    [21724]=1,
    [21725]=1,
    [21726]=1,
    [21727]=1,
    [21728]=1,
    [21729]=1,
    [21730]=1,
    [21731]=1,
    [21732]=1,
    [21733]=1,
    [21734]=1,
    [21735]=1,
    [21740]=1,
    [21741]=1,
    [21742]=1,
    [21743]=1,
    [21744]=1,
    [21745]=1,
    [21746]=1,
    [21749]=1,
    [21750]=1,
    [21751]=1,
    [21806]=1,
    [21809]=1,
    [21810]=1,
    [21812]=1,
    [21813]=1,
    [21814]=1,
    [21815]=1,
    [21836]=1,
    [21837]=1,
    [21838]=1,
    [21839]=1,
    [21856]=1,
    [21888]=1,
    [21889]=1,
    [21891]=1,
    [21920]=4,
    [21921]=4,
    [21925]=4,
    [21926]=4,
    [21928]=4,
    [21935]=4,
    [21936]=4,
    [21937]=4,
    [21938]=4,
    [21946]=1,
    [21982]=4,
    [21983]=1,
    [21984]=4,
    [21985]=4,
    [21986]=1,
    [21987]=4,
    [21988]=4,
    [21989]=4,
    [21994]=1,
    [21995]=1,
    [21996]=1,
    [21997]=1,
    [21998]=1,
    [21999]=1,
    [22000]=1,
    [22001]=1,
    [22002]=1,
    [22003]=1,
    [22004]=1,
    [22005]=1,
    [22006]=1,
    [22007]=1,
    [22008]=1,
    [22009]=1,
    [22010]=1,
    [22011]=1,
    [22013]=1,
    [22014]=1,
    [22015]=1,
    [22016]=1,
    [22017]=1,
    [22046]=4,
    [22047]=4,
    [22048]=4,
    [22049]=1,
    [22050]=1,
    [22051]=1,
    [22052]=1,
    [22056]=1,
    [22057]=1,
    [22060]=1,
    [22061]=1,
    [22062]=1,
    [22063]=1,
    [22064]=1,
    [22065]=1,
    [22066]=1,
    [22067]=1,
    [22068]=1,
    [22069]=1,
    [22070]=1,
    [22071]=1,
    [22072]=1,
    [22073]=1,
    [22074]=1,
    [22075]=1,
    [22076]=1,
    [22077]=1,
    [22078]=1,
    [22079]=1,
    [22080]=1,
    [22081]=1,
    [22082]=1,
    [22083]=1,
    [22084]=1,
    [22085]=1,
    [22086]=1,
    [22087]=1,
    [22088]=1,
    [22089]=1,
    [22090]=1,
    [22091]=1,
    [22092]=1,
    [22093]=1,
    [22094]=4,
    [22095]=1,
    [22096]=1,
    [22097]=1,
    [22098]=1,
    [22099]=1,
    [22100]=1,
    [22101]=1,
    [22102]=1,
    [22106]=1,
    [22107]=1,
    [22108]=1,
    [22109]=1,
    [22110]=1,
    [22111]=1,
    [22112]=1,
    [22113]=1,
    [22115]=1,
    [22137]=1,
    [22138]=4,
    [22139]=1,
    [22149]=1,
    [22150]=1,
    [22192]=1,
    [22193]=1,
    [22200]=1,
    [22201]=4,
    [22204]=1,
    [22205]=1,
    [22206]=1,
    [22207]=1,
    [22208]=1,
    [22209]=1,
    [22212]=1,
    [22214]=1,
    [22216]=4,
    [22217]=4,
    [22219]=1,
    [22221]=1,
    [22223]=1,
    [22224]=4,
    [22225]=1,
    [22226]=4,
    [22227]=4,
    [22228]=4,
    [22229]=4,
    [22231]=1,
    [22232]=1,
    [22234]=1,
    [22235]=1,
    [22236]=1,
    [22237]=1,
    [22238]=1,
    [22239]=1,
    [22240]=1,
    [22241]=1,
    [22242]=1,
    [22243]=1,
    [22244]=1,
    [22245]=1,
    [22247]=1,
    [22253]=1,
    [22254]=1,
    [22255]=1,
    [22256]=1,
    [22257]=1,
    [22259]=1,
    [22260]=1,
    [22264]=4,
    [22265]=4,
    [22266]=1,
    [22267]=1,
    [22268]=1,
    [22269]=1,
    [22270]=1,
    [22271]=1,
    [22272]=1,
    [22274]=1,
    [22275]=1,
    [22276]=1,
    [22277]=1,
    [22278]=1,
    [22280]=1,
    [22281]=1,
    [22282]=1,
    [22301]=1,
    [22302]=1,
    [22303]=1,
    [22304]=1,
    [22305]=1,
    [22306]=1,
    [22310]=1,
    [22311]=1,
    [22312]=1,
    [22313]=1,
    [22314]=1,
    [22315]=1,
    [22317]=1,
    [22318]=1,
    [22319]=1,
    [22320]=1,
    [22321]=1,
    [22322]=1,
    [22325]=1,
    [22326]=1,
    [22327]=1,
    [22328]=1,
    [22329]=1,
    [22330]=1,
    [22331]=1,
    [22332]=1,
    [22333]=1,
    [22334]=1,
    [22335]=1,
    [22336]=1,
    [22337]=1,
    [22338]=4,
    [22339]=1,
    [22340]=1,
    [22342]=1,
    [22343]=1,
    [22344]=1,
    [22345]=1,
    [22347]=1,
    [22348]=1,
    [22349]=1,
    [22350]=1,
    [22351]=1,
    [22352]=1,
    [22353]=1,
    [22354]=1,
    [22355]=1,
    [22356]=1,
    [22357]=1,
    [22358]=1,
    [22359]=1,
    [22360]=1,
    [22361]=1,
    [22362]=1,
    [22363]=1,
    [22364]=1,
    [22365]=1,
    [22366]=1,
    [22367]=1,
    [22368]=1,
    [22369]=1,
    [22370]=1,
    [22371]=1,
    [22372]=1,
    [22377]=1,
    [22378]=1,
    [22379]=1,
    [22380]=1,
    [22381]=4,
    [22382]=4,
    [22392]=1,
    [22394]=1,
    [22395]=1,
    [22396]=1,
    [22397]=1,
    [22398]=1,
    [22399]=1,
    [22400]=1,
    [22401]=1,
    [22402]=1,
    [22403]=1,
    [22404]=1,
    [22405]=1,
    [22406]=1,
    [22407]=1,
    [22408]=1,
    [22409]=1,
    [22410]=1,
    [22411]=1,
    [22412]=1,
    [22416]=1,
    [22417]=1,
    [22418]=1,
    [22419]=1,
    [22420]=1,
    [22421]=1,
    [22422]=1,
    [22423]=1,
    [22424]=1,
    [22425]=1,
    [22426]=1,
    [22427]=1,
    [22428]=1,
    [22429]=1,
    [22430]=1,
    [22431]=1,
    [22432]=4,
    [22433]=1,
    [22434]=4,
    [22435]=4,
    [22436]=1,
    [22437]=1,
    [22438]=1,
    [22439]=1,
    [22440]=1,
    [22441]=1,
    [22442]=1,
    [22443]=1,
    [22444]=4,
    [22458]=1,
    [22464]=1,
    [22465]=1,
    [22466]=1,
    [22467]=1,
    [22468]=1,
    [22469]=1,
    [22470]=1,
    [22471]=1,
    [22472]=1,
    [22476]=1,
    [22477]=1,
    [22478]=1,
    [22479]=1,
    [22480]=1,
    [22481]=1,
    [22482]=1,
    [22483]=1,
    [22484]=1,
    [22488]=1,
    [22489]=1,
    [22490]=1,
    [22491]=1,
    [22492]=1,
    [22493]=1,
    [22494]=1,
    [22495]=1,
    [22496]=1,
    [22497]=1,
    [22498]=1,
    [22499]=1,
    [22500]=1,
    [22501]=1,
    [22502]=1,
    [22503]=1,
    [22504]=1,
    [22505]=1,
    [22506]=1,
    [22507]=1,
    [22508]=1,
    [22509]=1,
    [22510]=1,
    [22511]=1,
    [22512]=1,
    [22513]=1,
    [22514]=1,
    [22515]=1,
    [22516]=1,
    [22517]=1,
    [22518]=1,
    [22519]=1,
    [22520]=1,
    [22523]=1,
    [22524]=1,
    [22568]=1,
    [22593]=4,
    [22595]=4,
    [22630]=1,
    [22631]=1,
    [22632]=1,
    [22635]=1,
    [22636]=1,
    [22637]=1,
    [22638]=1,
    [22648]=1,
    [22649]=1,
    [22650]=1,
    [22651]=1,
    [22656]=1,
    [22657]=1,
    [22659]=1,
    [22667]=1,
    [22668]=1,
    [22672]=1,
    [22673]=1,
    [22676]=1,
    [22678]=1,
    [22679]=1,
    [22680]=1,
    [22681]=1,
    [22683]=1,
    [22688]=1,
    [22689]=1,
    [22690]=1,
    [22691]=1,
    [22699]=1,
    [22700]=1,
    [22701]=1,
    [22702]=1,
    [22707]=1,
    [22708]=4,
    [22711]=1,
    [22712]=1,
    [22713]=1,
    [22714]=1,
    [22715]=1,
    [22716]=1,
    [22718]=1,
    [22719]=1,
    [22720]=1,
    [22721]=1,
    [22722]=1,
    [22723]=1,
    [22725]=1,
    [22726]=1,
    [22727]=1,
    [22730]=1,
    [22731]=1,
    [22732]=1,
    [22733]=4,
    [22734]=4,
    [22736]=1,
    [22740]=1,
    [22741]=1,
    [22742]=1,
    [22744]=1,
    [22745]=1,
    [22746]=1,
    [22747]=1,
    [22748]=1,
    [22749]=1,
    [22750]=1,
    [22752]=1,
    [22753]=1,
    [22754]=1,
    [22766]=1,
    [22767]=1,
    [22768]=1,
    [22769]=1,
    [22770]=1,
    [22771]=1,
    [22772]=1,
    [22773]=1,
    [22774]=1,
    [22798]=1,
    [22799]=1,
    [22800]=1,
    [22801]=1,
    [22802]=1,
    [22803]=1,
    [22804]=1,
    [22806]=1,
    [22807]=1,
    [22808]=1,
    [22809]=1,
    [22810]=1,
    [22811]=1,
    [22812]=1,
    [22813]=1,
    [22815]=1,
    [22816]=1,
    [22818]=1,
    [22819]=1,
    [22820]=1,
    [22821]=1,
    [22843]=1,
    [22852]=1,
    [22855]=1,
    [22856]=1,
    [22857]=1,
    [22858]=1,
    [22859]=1,
    [22860]=1,
    [22862]=1,
    [22863]=1,
    [22864]=1,
    [22865]=1,
    [22867]=1,
    [22868]=1,
    [22869]=1,
    [22870]=1,
    [22872]=1,
    [22873]=1,
    [22874]=1,
    [22875]=1,
    [22876]=1,
    [22877]=1,
    [22878]=1,
    [22879]=1,
    [22880]=1,
    [22881]=1,
    [22882]=1,
    [22883]=1,
    [22884]=1,
    [22885]=1,
    [22886]=1,
    [22887]=1,
    [22892]=4,
    [22930]=4,
    [22932]=4,
    [22935]=1,
    [22936]=1,
    [22937]=1,
    [22938]=1,
    [22939]=1,
    [22940]=1,
    [22941]=1,
    [22942]=1,
    [22943]=1,
    [22944]=4,
    [22945]=4,
    [22946]=4,
    [22947]=1,
    [22948]=4,
    [22949]=4,
    [22950]=4,
    [22954]=1,
    [22960]=1,
    [22961]=1,
    [22967]=1,
    [22968]=1,
    [22970]=1,
    [22972]=1,
    [22973]=1,
    [22974]=1,
    [22975]=1,
    [22977]=1,
    [22981]=1,
    [22983]=1,
    [22988]=1,
    [22994]=1,
    [22999]=1,
    [23000]=1,
    [23001]=1,
    [23002]=1,
    [23004]=1,
    [23005]=1,
    [23006]=1,
    [23007]=1,
    [23008]=1,
    [23009]=1,
    [23010]=1,
    [23011]=1,
    [23012]=1,
    [23013]=1,
    [23014]=1,
    [23015]=1,
    [23016]=1,
    [23017]=1,
    [23018]=1,
    [23019]=1,
    [23020]=1,
    [23021]=1,
    [23023]=1,
    [23024]=1,
    [23025]=1,
    [23027]=1,
    [23028]=1,
    [23029]=1,
    [23030]=1,
    [23031]=1,
    [23032]=1,
    [23033]=1,
    [23035]=1,
    [23036]=1,
    [23037]=1,
    [23038]=1,
    [23039]=1,
    [23040]=1,
    [23041]=1,
    [23042]=1,
    [23043]=1,
    [23044]=1,
    [23045]=1,
    [23046]=1,
    [23047]=1,
    [23048]=1,
    [23049]=1,
    [23050]=1,
    [23051]=1,
    [23053]=1,
    [23054]=1,
    [23056]=1,
    [23057]=1,
    [23059]=1,
    [23060]=1,
    [23061]=1,
    [23062]=1,
    [23063]=1,
    [23064]=1,
    [23065]=1,
    [23066]=1,
    [23067]=1,
    [23068]=1,
    [23069]=1,
    [23070]=1,
    [23071]=1,
    [23073]=1,
    [23075]=1,
    [23078]=1,
    [23081]=1,
    [23082]=1,
    [23083]=1,
    [23084]=1,
    [23085]=1,
    [23087]=1,
    [23088]=1,
    [23089]=1,
    [23122]=1,
    [23123]=1,
    [23124]=1,
    [23125]=1,
    [23126]=1,
    [23127]=1,
    [23128]=1,
    [23129]=1,
    [23132]=1,
    [23139]=1,
    [23156]=1,
    [23160]=1,
    [23161]=1,
    [23168]=1,
    [23169]=1,
    [23170]=1,
    [23171]=1,
    [23173]=1,
    [23177]=1,
    [23178]=1,
    [23179]=1,
    [23180]=1,
    [23181]=1,
    [23182]=1,
    [23183]=1,
    [23184]=1,
    [23192]=1,
    [23194]=1,
    [23195]=1,
    [23196]=1,
    [23198]=1,
    [23200]=1,
    [23201]=1,
    [23206]=1,
    [23207]=1,
    [23211]=1,
    [23219]=1,
    [23220]=1,
    [23221]=1,
    [23226]=1,
    [23237]=1,
    [23238]=1,
    [23242]=1,
    [23243]=1,
    [23244]=1,
    [23246]=1,
    [23250]=4,
    [23251]=1,
    [23252]=1,
    [23253]=1,
    [23254]=1,
    [23255]=1,
    [23256]=1,
    [23257]=1,
    [23258]=1,
    [23259]=1,
    [23260]=1,
    [23261]=1,
    [23262]=1,
    [23263]=1,
    [23264]=1,
    [23272]=1,
    [23273]=1,
    [23274]=1,
    [23275]=1,
    [23276]=1,
    [23277]=1,
    [23278]=1,
    [23279]=1,
    [23280]=1,
    [23281]=1,
    [23282]=1,
    [23283]=1,
    [23284]=1,
    [23285]=1,
    [23286]=1,
    [23287]=1,
    [23288]=1,
    [23289]=1,
    [23290]=1,
    [23291]=1,
    [23292]=1,
    [23293]=1,
    [23294]=1,
    [23295]=1,
    [23296]=1,
    [23297]=1,
    [23298]=1,
    [23299]=1,
    [23300]=1,
    [23301]=1,
    [23302]=1,
    [23303]=1,
    [23304]=1,
    [23305]=1,
    [23306]=1,
    [23307]=1,
    [23308]=1,
    [23309]=1,
    [23310]=1,
    [23311]=1,
    [23312]=1,
    [23313]=1,
    [23314]=1,
    [23315]=1,
    [23316]=1,
    [23317]=1,
    [23318]=1,
    [23319]=1,
    [23323]=1,
    [23324]=1,
    [23326]=1,
    [23327]=1,
    [23379]=1,
    [23435]=1,
    [23451]=1,
    [23452]=1,
    [23453]=1,
    [23454]=1,
    [23455]=1,
    [23456]=1,
    [23464]=1,
    [23465]=1,
    [23466]=1,
    [23467]=1,
    [23468]=1,
    [23469]=1,
    [23545]=1,
    [23547]=1,
    [23548]=1,
    [23549]=1,
    [23557]=1,
    [23558]=1,
    [23570]=1,
    [23577]=1,
    [23663]=1,
    [23664]=1,
    [23665]=1,
    [23666]=1,
    [23667]=1,
    [23668]=1,
    [13325]=1,
}
